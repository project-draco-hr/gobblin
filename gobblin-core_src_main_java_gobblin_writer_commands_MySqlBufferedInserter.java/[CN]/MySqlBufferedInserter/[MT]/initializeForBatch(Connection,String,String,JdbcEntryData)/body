{
  columnNames=Lists.newArrayList();
  for (  JdbcEntryDatum datum : jdbcEntryData) {
    columnNames.add(datum.getColumnName());
  }
  pendingInserts=Lists.newArrayList();
  insertStmtPrefix=String.format(INSERT_STATEMENT_PREFIX_FORMAT,databaseName,table,JOINER_ON_COMMA.join(columnNames));
  int actualBatchSize=Math.min(batchSize,maxParamSize / columnNames.size());
  if (batchSize != actualBatchSize) {
    LOG.info("Changing batch size from " + batchSize + " to "+ actualBatchSize+ " due to # of params limitation "+ maxParamSize+ " , # of columns: "+ columnNames.size());
  }
  batchSize=actualBatchSize;
  insertPstmtForFixedBatch=conn.prepareStatement(createPrepareStatementStr(insertStmtPrefix,batchSize));
  if (batchSize == 1) {
    LOG.info("Initialized for insert " + this);
  }
 else {
    LOG.info("Initialized for batch insert " + this);
  }
  retryer=RetryerBuilder.<Boolean>newBuilder().retryIfException().withWaitStrategy(WaitStrategies.exponentialWait(1000,30,TimeUnit.SECONDS)).withStopStrategy(StopStrategies.stopAfterAttempt(5)).build();
}
