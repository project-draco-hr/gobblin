{
  GenericRecord avroRecord=new GenericData.Record(outputSchema);
  long maxFailedConversions=workUnit.getPropAsLong(ConfigurationKeys.CONVERTER_AVRO_MAX_CONVERSION_FAILURES,ConfigurationKeys.DEFAULT_CONVERTER_AVRO_MAX_CONVERSION_FAILURES);
  for (  Map.Entry<String,JsonElement> entry : inputRecord.entrySet()) {
    try {
      avroRecord.put(entry.getKey(),this.converters.get(entry.getKey()).convert(entry.getValue()));
    }
 catch (    Exception e) {
      this.numFailedConversion++;
      if (this.numFailedConversion < maxFailedConversions) {
        LOG.error("Dropping record " + inputRecord + " because it cannot be converted to Avro",e);
        return new EmptyIterable<>();
      }
      throw new DataConversionException("Unable to convert field:" + entry.getKey() + " for value:"+ entry.getValue()+ " for record: "+ inputRecord,e);
    }
  }
  return new SingleRecordIterable<>(avroRecord);
}
