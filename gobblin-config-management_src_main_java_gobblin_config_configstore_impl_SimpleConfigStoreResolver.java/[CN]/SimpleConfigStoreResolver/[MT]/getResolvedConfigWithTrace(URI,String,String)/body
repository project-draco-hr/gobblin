{
  CircularDependencyChecker.checkCircularDependency(store,version,uri);
  Config self=this.getOwnConfig(uri,version);
  for (  Entry<String,ConfigValue> entry : self.entrySet()) {
    LOG.info(String.format("key %s, value %s from uri %s, with traceID %s",entry.getKey(),entry.getValue(),uri,traceID));
  }
  if (isRootURI(uri)) {
    return self;
  }
  Collection<URI> imported=this.getOwnImports(uri,version);
  List<Config> importedConfigs=new ArrayList<Config>();
  for (  URI u : imported) {
    Config singleImported=this.getResolvedConfigWithTrace(u,version,traceID);
    importedConfigs.add(singleImported);
  }
  for (int i=importedConfigs.size() - 1; i >= 0; i--) {
    self=self.withFallback(importedConfigs.get(i));
  }
  Config ancestor=this.getAncestorConfig(uri,version,traceID);
  return self.withFallback(ancestor);
}
