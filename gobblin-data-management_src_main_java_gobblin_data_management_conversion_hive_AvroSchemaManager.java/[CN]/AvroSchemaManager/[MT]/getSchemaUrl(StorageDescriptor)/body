{
  String schemaString=StringUtils.EMPTY;
  try {
    if (sd.getSerdeInfo().getParameters().containsKey(HiveAvroSerDeManager.SCHEMA_URL)) {
      String schemaUrl=sd.getSerdeInfo().getParameters().get(HiveAvroSerDeManager.SCHEMA_URL);
      if (schemaUrl.startsWith("http")) {
        schemaString=IOUtils.toString(new URI(schemaUrl),StandardCharsets.UTF_8);
        log.debug("Schema string is: " + schemaString);
        Schema schema=HiveAvroORCQueryGenerator.readSchemaFromString(schemaString);
        return getOrGenerateSchemaFile(schema);
      }
 else {
        return new Path(sd.getSerdeInfo().getParameters().get(HiveAvroSerDeManager.SCHEMA_URL));
      }
    }
 else     if (sd.getSerdeInfo().getParameters().containsKey(HiveAvroSerDeManager.SCHEMA_LITERAL)) {
      schemaString=sd.getSerdeInfo().getParameters().get(HiveAvroSerDeManager.SCHEMA_LITERAL);
      log.debug("Schema string is: " + schemaString);
      Schema schema=HiveAvroORCQueryGenerator.readSchemaFromString(schemaString);
      return getOrGenerateSchemaFile(schema);
    }
  }
 catch (  URISyntaxException e) {
    log.error(String.format("Failed to parse schema from schema string. Falling back to HDFS schema: %s",schemaString),e);
  }
  Schema schema=AvroUtils.getDirectorySchema(new Path(sd.getLocation()),this.fs,true);
  return getOrGenerateSchemaFile(schema);
}
