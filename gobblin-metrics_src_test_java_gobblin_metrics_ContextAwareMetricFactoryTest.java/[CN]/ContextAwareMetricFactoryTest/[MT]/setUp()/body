{
  this.context=MetricContext.builder(CONTEXT_NAME).build();
  this.counter=ContextAwareMetricFactory.DEFAULT_CONTEXT_AWARE_COUNTER_FACTORY.newMetric(this.context,RECORDS_PROCESSED);
  this.counter.addTag(new Tag<String>(JOB_ID_KEY,JOB_ID));
  this.meter=ContextAwareMetricFactory.DEFAULT_CONTEXT_AWARE_METER_FACTORY.newMetric(this.context,RECORD_PROCESS_RATE);
  this.meter.addTag(new Tag<String>(JOB_ID_KEY,JOB_ID));
  this.histogram=ContextAwareMetricFactory.DEFAULT_CONTEXT_AWARE_HISTOGRAM_FACTORY.newMetric(this.context,RECORD_SIZE_DISTRIBUTION);
  this.histogram.addTag(new Tag<String>(JOB_ID_KEY,JOB_ID));
  this.timer=ContextAwareMetricFactory.DEFAULT_CONTEXT_AWARE_TIMER_FACTORY.newMetric(this.context,TOTAL_DURATION);
  this.timer.addTag(new Tag<String>(JOB_ID_KEY,JOB_ID));
}
