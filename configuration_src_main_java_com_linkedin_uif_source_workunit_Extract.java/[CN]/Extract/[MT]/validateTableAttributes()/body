{
  if (getNamespace().isEmpty() || getTable().isEmpty() || getExtractId().isEmpty()) {
    throw new MissingExtractAttributeException("All extracts require a namespace, tableName, and extractId");
  }
switch (getType()) {
case SNAPSHOT_ONLY:
    if (getFullExtractRunTime() == -1)     throw new MissingExtractAttributeException("Full snapshot tables require a timestamp for full drops.  In most cases, this is when the full extract was started. " + "You can set the timestamp using " + Extract.class.getName() + ".setFullTrue(long extractFullRunTime)");
  break;
case APPEND_ONLY:
try {
  getDeltaFields();
}
 catch (NullPointerException e) {
  throw new MissingExtractAttributeException("Append tables require at least one delta field in order to partition the data according to data/time.  This should be a timestamp or something equivelent. " + "You can set the delta field(s) using one of the setters on " + Extract.class.getName());
}
break;
case SNAPSHOT_APPEND:
try {
getPrimaryKeys();
}
 catch (NullPointerException e) {
throw new MissingExtractAttributeException("SnapshotAppend tables require a primary key in order to apply the changelog.  " + "If this table won't have a change log, consider using a different table type. " + "You can set the primary key(s) using one of the setters on "+ Extract.class.getName());
}
if (getIsFull() && getFullExtractRunTime() == -1) throw new MissingExtractAttributeException("SnapshotAppend tables require a timestamp for full drops.  In most cases, this is when the full extract was started. " + "You can set the timestamp using " + Extract.class.getName() + ".setFullTrue(long extractFullRunTime)");
if (!getIsFull()) {
try {
getDeltaFields();
}
 catch (NullPointerException e) {
throw new MissingExtractAttributeException("SnapshotAppend tables require at least one delta field in order to apply the changelog.  This could be a timestamp, transactionId, scn, or something equivelent. " + "You can set the delta field(s) using one of the setters on " + Extract.class.getName());
}
}
}
}
