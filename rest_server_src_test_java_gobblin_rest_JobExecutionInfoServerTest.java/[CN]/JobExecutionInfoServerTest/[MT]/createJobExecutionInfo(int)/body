{
  JobExecutionInfo jobExecutionInfo=new JobExecutionInfo();
  jobExecutionInfo.setJobName("TestJob" + index);
  jobExecutionInfo.setJobId(jobExecutionInfo.getJobName() + "_" + System.currentTimeMillis());
  jobExecutionInfo.setStartTime(System.currentTimeMillis());
  jobExecutionInfo.setState(JobStateEnum.PENDING);
  jobExecutionInfo.setLaunchedTasks(2);
  jobExecutionInfo.setCompletedTasks(0);
  MetricArray jobMetrics=new MetricArray();
  Metric jobMetric1=new Metric();
  jobMetric1.setGroup("JOB");
  jobMetric1.setName("jm1");
  jobMetric1.setType(MetricTypeEnum.COUNTER);
  jobMetric1.setValue("100");
  jobMetrics.add(jobMetric1);
  jobExecutionInfo.setMetrics(jobMetrics);
  Map<String,String> jobProperties=Maps.newHashMap();
  jobProperties.put("k","v");
  jobExecutionInfo.setJobProperties(new StringMap(jobProperties));
  TaskExecutionInfoArray taskExecutionInfos=new TaskExecutionInfoArray();
  TaskExecutionInfo taskExecutionInfo1=new TaskExecutionInfo();
  taskExecutionInfo1.setJobId(jobExecutionInfo.getJobId());
  taskExecutionInfo1.setTaskId(jobExecutionInfo.getJobId() + "_0");
  taskExecutionInfo1.setStartTime(System.currentTimeMillis());
  taskExecutionInfo1.setState(TaskStateEnum.PENDING);
  taskExecutionInfo1.setLowWatermark(0L);
  taskExecutionInfo1.setHighWatermark(1000L);
  Table table1=new Table();
  table1.setNamespace("Test");
  table1.setName("Test1");
  table1.setType(TableTypeEnum.SNAPSHOT_ONLY);
  taskExecutionInfo1.setTable(table1);
  MetricArray taskMetrics1=new MetricArray();
  Metric taskMetric1=new Metric();
  taskMetric1.setGroup("TASK");
  taskMetric1.setName("tm1");
  taskMetric1.setType(MetricTypeEnum.COUNTER);
  taskMetric1.setValue("100");
  taskMetrics1.add(taskMetric1);
  taskExecutionInfo1.setMetrics(taskMetrics1);
  Map<String,String> taskProperties1=Maps.newHashMap();
  taskProperties1.put("k1","v1");
  taskExecutionInfo1.setTaskProperties(new StringMap(taskProperties1));
  taskExecutionInfos.add(taskExecutionInfo1);
  TaskExecutionInfo taskExecutionInfo2=new TaskExecutionInfo();
  taskExecutionInfo2.setJobId(jobExecutionInfo.getJobId());
  taskExecutionInfo2.setTaskId(jobExecutionInfo.getJobId() + "_1");
  taskExecutionInfo2.setStartTime(System.currentTimeMillis());
  taskExecutionInfo2.setState(TaskStateEnum.PENDING);
  taskExecutionInfo2.setLowWatermark(0L);
  taskExecutionInfo2.setHighWatermark(2000L);
  Table table2=new Table();
  table2.setNamespace("Test");
  table2.setName("Test2");
  table2.setType(TableTypeEnum.SNAPSHOT_ONLY);
  taskExecutionInfo2.setTable(table2);
  MetricArray taskMetrics2=new MetricArray();
  Metric taskMetric2=new Metric();
  taskMetric2.setGroup("TASK");
  taskMetric2.setName("tm2");
  taskMetric2.setType(MetricTypeEnum.COUNTER);
  taskMetric2.setValue("100");
  taskMetrics2.add(taskMetric2);
  taskExecutionInfo2.setMetrics(taskMetrics2);
  Map<String,String> taskProperties2=Maps.newHashMap();
  taskProperties2.put("k2","v2");
  taskExecutionInfo2.setTaskProperties(new StringMap(taskProperties2));
  taskExecutionInfos.add(taskExecutionInfo2);
  jobExecutionInfo.setTaskExecutions(taskExecutionInfos);
  return jobExecutionInfo;
}
