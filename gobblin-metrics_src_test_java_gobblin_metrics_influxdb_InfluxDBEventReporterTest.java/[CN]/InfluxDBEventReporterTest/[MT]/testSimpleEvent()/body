{
  try (MetricContext metricContext=MetricContext.builder(this.getClass().getCanonicalName() + ".testInfluxDBReporter1").build();InfluxDBEventReporter influxEventReporter=getBuilder(metricContext).build()){
    Map<String,String> metadata=Maps.newHashMap();
    metadata.put(TaskEvent.METADATA_TASK_ID,"taskId123");
    metricContext.submitEvent(GobblinTrackingEvent.newBuilder().setName(JobEvent.TASKS_SUBMITTED).setNamespace(NAMESPACE).setMetadata(metadata).build());
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
    }
    influxEventReporter.report();
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
    }
    TimestampedValue retrievedEvent=influxDB.getMetric("gobblin.metrics.influxdb.InfluxDBEventReporterTest.testInfluxDBReporter1.taskId123.events.TasksSubmitted");
    Assert.assertEquals(retrievedEvent.getValue(),"0.0");
    Assert.assertTrue(retrievedEvent.getTimestamp() <= (System.currentTimeMillis()));
  }
 }
