{
  CircularDependencyChecker.checkCircularDependency(this,uri);
  Config self=this.getOwnConfig(uri);
  if (isRootURI(uri)) {
    return self;
  }
  Collection<URI> imported=this.getOwnImports(uri);
  Iterator<URI> it=imported.iterator();
  List<Config> importedConfigs=new ArrayList<Config>();
  while (it.hasNext()) {
    importedConfigs.add(this.getResolvedConfig(it.next()));
  }
  for (int i=importedConfigs.size() - 1; i >= 0; i--) {
    self=self.withFallback(importedConfigs.get(i));
  }
  Config ancestor=this.getAncestorConfig(uri);
  return self.withFallback(ancestor);
}
