{
  ConfigStoreAccessor result;
  ConfigStoreFactory<ConfigStore> csFactory=this.getConfigStoreFactory(configKeyURI);
  ConfigStore cs=csFactory.createConfigStore(configKeyURI);
  if (!(cs instanceof ConfigStoreWithStableVersioning)) {
    if (this.policy == VersionStabilityPolicy.CROSS_JVM_STABILITY) {
      throw new RuntimeException(String.format("with policy set to %s, can not connect to unstable config store %s",VersionStabilityPolicy.CROSS_JVM_STABILITY,cs.getStoreURI()));
    }
  }
  String currentVersion=cs.getCurrentVersion();
  ConfigStoreBackedTopology csTopology=new ConfigStoreBackedTopology(cs,currentVersion);
  InMemoryTopology inMemoryTopology=new InMemoryTopology(csTopology);
  ConfigStoreBackedValueInspector rawValueInspector=new ConfigStoreBackedValueInspector(cs,currentVersion,inMemoryTopology);
  InMemoryValueInspector inMemoryValueInspector;
  if (cs instanceof ConfigStoreWithStableVersioning || this.policy == VersionStabilityPolicy.WEAK_LOCAL_STABILITY) {
    inMemoryValueInspector=new InMemoryValueInspector(rawValueInspector,false);
    result=new ConfigStoreAccessor(cs,inMemoryValueInspector,inMemoryTopology);
  }
 else   if (this.policy == VersionStabilityPolicy.STRONG_LOCAL_STABILITY) {
    inMemoryValueInspector=new InMemoryValueInspector(rawValueInspector,true);
    result=new ConfigStoreAccessor(cs,inMemoryValueInspector,inMemoryTopology);
  }
 else {
    result=new ConfigStoreAccessor(cs,rawValueInspector,inMemoryTopology);
  }
  return result;
}
