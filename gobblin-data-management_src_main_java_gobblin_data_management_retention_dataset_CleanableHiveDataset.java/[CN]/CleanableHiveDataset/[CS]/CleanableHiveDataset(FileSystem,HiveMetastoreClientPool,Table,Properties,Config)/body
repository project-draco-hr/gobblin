{
  super(fs,clientPool,table,jobProps,datasetConfig);
  try {
    this.hiveSelectionPolicy=(VersionSelectionPolicy)GobblinConstructorUtils.invokeFirstConstructor(Class.forName(ConfigUtils.getString(datasetConfig,SELECTION_POLICY_CLASS_KEY,DEFAULT_SELECTION_POLICY_CLASS)),ImmutableList.<Object>of(datasetConfig,jobProps),ImmutableList.<Object>of(datasetConfig),ImmutableList.<Object>of(jobProps));
    this.hiveDatasetVersionFinder=(AbstractHiveDatasetVersionFinder)GobblinConstructorUtils.invokeFirstConstructor(Class.forName(ConfigUtils.getString(datasetConfig,VERSION_FINDER_CLASS_KEY,DEFAULT_VERSION_FINDER_CLASS)),ImmutableList.<Object>of(this.fs,datasetConfig),ImmutableList.<Object>of(this.fs,jobProps));
  }
 catch (  NoSuchMethodException|IllegalAccessException|InvocationTargetException|InstantiationException|ClassNotFoundException e) {
    throw new IllegalArgumentException(e);
  }
  this.fsCleanableHelper=new FsCleanableHelper(fs,jobProps,datasetConfig,log);
  this.shouldDeleteData=Boolean.valueOf(jobProps.getProperty(SHOULD_DELETE_DATA_KEY,SHOULD_DELETE_DATA_DEFAULT));
  this.simulate=Boolean.valueOf(jobProps.getProperty(FsCleanableHelper.SIMULATE_KEY,FsCleanableHelper.SIMULATE_DEFAULT));
}
