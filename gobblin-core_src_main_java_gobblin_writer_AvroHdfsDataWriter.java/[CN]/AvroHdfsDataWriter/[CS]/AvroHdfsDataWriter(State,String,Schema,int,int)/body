{
  super(properties,fileName,numBranches,branchId);
  Path filePath=new Path(fileName);
  CodecFactory codecFactory=WriterUtils.getCodecFactory(Optional.fromNullable(properties.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_CODEC_TYPE,numBranches,branchId))),Optional.fromNullable(properties.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_DEFLATE_LEVEL,numBranches,branchId))));
  int bufferSize=Integer.parseInt(properties.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_BUFFER_SIZE,numBranches,branchId),ConfigurationKeys.DEFAULT_BUFFER_SIZE));
  short replication=properties.getPropAsShort(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_REPLICATION_FACTOR,numBranches,branchId),this.fs.getDefaultReplication(filePath));
  long blockSize=properties.getPropAsLong(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_BLOCK_SIZE,numBranches,branchId),this.fs.getDefaultBlockSize(filePath));
  FsPermission permissions=new FsPermission(properties.getPropAsShort(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_PERMISSIONS,numBranches,branchId),FsPermission.getDefault().toShort()));
  this.schema=schema;
  this.datumWriter=new GenericDatumWriter<GenericRecord>();
  this.writer=createDatumWriter(this.stagingFile,bufferSize,codecFactory,replication,blockSize,permissions);
}
