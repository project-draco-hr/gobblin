{
  Map<String,Metric> metricMap=this.metrics.getMetrics();
  Assert.assertEquals(metricMap.size(),5);
  Metric metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"records"));
  Assert.assertTrue(metric instanceof Counter);
  Assert.assertEquals(((Counter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"records"));
  Assert.assertTrue(metric instanceof Counter);
  Assert.assertEquals(((Counter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"recordsPerSec"));
  Assert.assertTrue(metric instanceof Meter);
  Assert.assertEquals(((Meter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"recordsPerSec"));
  Assert.assertTrue(metric instanceof Meter);
  Assert.assertEquals(((Meter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"expectedRecords"));
  Assert.assertTrue(metric instanceof Gauge);
  Assert.assertEquals(((Gauge<Long>)metric).getValue().longValue(),10L);
  metricMap=this.metrics.getMetricsOfGroup(JobMetrics.MetricGroup.JOB);
  Assert.assertEquals(metricMap.size(),3);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"records"));
  Assert.assertTrue(metric instanceof Counter);
  Assert.assertEquals(((Counter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"recordsPerSec"));
  Assert.assertTrue(metric instanceof Meter);
  Assert.assertEquals(((Meter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"expectedRecords"));
  Assert.assertTrue(metric instanceof Gauge);
  Assert.assertEquals(((Gauge<Long>)metric).getValue().longValue(),10L);
  metricMap=this.metrics.getMetricsOfGroup(JobMetrics.MetricGroup.TASK);
  Assert.assertEquals(metricMap.size(),2);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"records"));
  Assert.assertTrue(metric instanceof Counter);
  Assert.assertEquals(((Counter)metric).getCount(),3L);
  metric=metricMap.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"recordsPerSec"));
  Assert.assertTrue(metric instanceof Meter);
  Assert.assertEquals(((Meter)metric).getCount(),3L);
  Map<String,? extends Metric> metricMap1=this.metrics.getMetricsOfType(JobMetrics.MetricType.COUNTER,JobMetrics.MetricGroup.JOB,JOB_ID);
  Assert.assertEquals(metricMap1.size(),1);
  Counter counter=(Counter)metricMap1.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"records"));
  Assert.assertEquals(counter.getCount(),3L);
  metricMap1=this.metrics.getMetricsOfType(JobMetrics.MetricType.COUNTER,JobMetrics.MetricGroup.TASK,TASK_ID);
  Assert.assertEquals(metricMap1.size(),1);
  counter=(Counter)metricMap1.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"records"));
  Assert.assertEquals(counter.getCount(),3L);
  metricMap1=this.metrics.getMetricsOfType(JobMetrics.MetricType.METER,JobMetrics.MetricGroup.JOB,JOB_ID);
  Assert.assertEquals(metricMap1.size(),1);
  Meter meter=(Meter)metricMap1.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"recordsPerSec"));
  Assert.assertEquals(meter.getCount(),3L);
  metricMap1=this.metrics.getMetricsOfType(JobMetrics.MetricType.METER,JobMetrics.MetricGroup.TASK,TASK_ID);
  Assert.assertEquals(metricMap1.size(),1);
  meter=(Meter)metricMap1.get(JobMetrics.metricName(JobMetrics.MetricGroup.TASK,TASK_ID,"recordsPerSec"));
  Assert.assertEquals(meter.getCount(),3L);
  metricMap1=this.metrics.getMetricsOfType(JobMetrics.MetricType.GAUGE,JobMetrics.MetricGroup.JOB,JOB_ID);
  Assert.assertEquals(metricMap1.size(),1);
  Gauge<Long> gauge=(Gauge<Long>)metricMap1.get(JobMetrics.metricName(JobMetrics.MetricGroup.JOB,JOB_ID,"expectedRecords"));
  Assert.assertEquals(gauge.getValue().longValue(),10L);
}
