{
  if (!isEvolutionEnabled || !destinationTableMeta.isPresent()) {
    return Collections.emptyList();
  }
  String stagingDbName=optionalStagingDbName.isPresent() ? optionalStagingDbName.get() : DEFAULT_DB_NAME;
  String finalDbName=optionalFinalDbName.isPresent() ? optionalFinalDbName.get() : DEFAULT_DB_NAME;
  List<String> ddl=Lists.newArrayList();
  Table destinationTable=destinationTableMeta.get();
  for (  Map.Entry<String,String> evolvedColumn : evolvedColumns.entrySet()) {
    boolean found=false;
    for (    FieldSchema destinationField : destinationTable.getSd().getCols()) {
      if (destinationField.getName().equalsIgnoreCase(evolvedColumn.getKey())) {
        if (isTypeEvolved(evolvedColumn.getValue(),destinationField.getType())) {
          ddl.add(String.format("ALTER TABLE `%s`.`%s` CHANGE COLUMN %s %s %s COMMENT '%s'",finalDbName,finalTableName,evolvedColumn.getKey(),evolvedColumn.getKey(),evolvedColumn.getValue(),destinationField.getComment()));
        }
        found=true;
        break;
      }
    }
    if (!found) {
      String flattenSource=evolvedSchema.getField(evolvedColumn.getKey()).getProp("flatten_source");
      if (StringUtils.isBlank(flattenSource)) {
        flattenSource=evolvedSchema.getField(evolvedColumn.getKey()).name();
      }
      ddl.add(String.format("ALTER TABLE `%s`.`%s` ADD COLUMNS (%s %s COMMENT 'from flatten_source %s')",finalDbName,finalTableName,evolvedColumn.getKey(),evolvedColumn.getValue(),flattenSource));
    }
  }
  return ddl;
}
