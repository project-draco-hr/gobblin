{
  try {
    submitJobToHelix(createJob(workUnits));
    LOGGER.info(String.format("Submitted job %s to Helix",this.jobContext.getJobId()));
    this.jobSubmitted=true;
    waitForJobCompletion();
    LOGGER.info(String.format("Job %s completed",this.jobContext.getJobId()));
    this.jobComplete=true;
    List<TaskState> outputTaskStates=collectOutputTaskStates();
    if (outputTaskStates.size() < this.jobContext.getJobState().getTaskCount()) {
      LOGGER.error(String.format("Collected %d task states while expecting %d task states",outputTaskStates.size(),this.jobContext.getJobState().getTaskCount()));
      this.jobContext.getJobState().setState(JobState.RunningState.FAILED);
    }
    this.jobContext.getJobState().addTaskStates(outputTaskStates);
  }
  finally {
    deletePersistedWorkUnitsForJob();
  }
}
