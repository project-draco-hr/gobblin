{
  URI ancestor=new URI("etl-hdfs://eat1-nertznn01.grid.linkedin.com:9000/user/mitu/HdfsBasedConfigTest/");
  URI descendant=new URI("etl-hdfs://eat1-nertznn01.grid.linkedin.com:9000/user/mitu/HdfsBasedConfigTest/datasets/a1/a2");
  Assert.assertTrue(ConfigClientUtils.isAncestorOrSame(descendant,ancestor));
  descendant=new URI("etl-hdfs://eat1-nertznn01.grid.linkedin.com:9000/user/mitu/HdfsBasedConfigTest/datasets/a1/a2/");
  Assert.assertTrue(ConfigClientUtils.isAncestorOrSame(descendant,ancestor));
  descendant=new URI("etl-hdfs://ltx1-nertznn01.grid.linkedin.com:9000/user/mitu/HdfsBasedConfigTest/datasets/a1/a2");
  Assert.assertTrue(!ConfigClientUtils.isAncestorOrSame(descendant,ancestor));
  descendant=new URI("etl-hdfs://eat1-nertznn01.grid.linkedin.com:9000/user/sahil/HdfsBasedConfigTest/datasets/a1/a2");
  Assert.assertTrue(!ConfigClientUtils.isAncestorOrSame(descendant,ancestor));
  ConfigKeyPath data=SingleLinkedListConfigKeyPath.ROOT.createChild("data");
  ConfigKeyPath data2=SingleLinkedListConfigKeyPath.ROOT.createChild("data2");
  ConfigKeyPath identity=SingleLinkedListConfigKeyPath.ROOT.createChild("data").createChild("databases").createChild("Identity");
  Assert.assertTrue(ConfigClientUtils.isAncestorOrSame(identity,data));
  Assert.assertTrue(ConfigClientUtils.isAncestorOrSame(identity,SingleLinkedListConfigKeyPath.ROOT));
  Assert.assertTrue(!ConfigClientUtils.isAncestorOrSame(identity,data2));
}
