{
  this.log.info("Get high watermark using Rest Api");
  long CalculatedHighWatermark=-1;
  try {
    boolean success=this.getConnection();
    if (!success) {
      throw new HighWatermarkException("Failed to connect.");
    }
 else {
      this.log.debug("Connected successfully.");
      List<Command> cmds=this.getHighWatermarkMetadata(schema,entity,watermarkColumn,predicateList);
      CommandOutput<?,?> response=this.getResponse(cmds);
      CalculatedHighWatermark=this.getHighWatermark(response,watermarkColumn,watermarkSourceFormat);
    }
    this.log.info("High watermark:" + CalculatedHighWatermark);
    return CalculatedHighWatermark;
  }
 catch (  Exception e) {
    throw new HighWatermarkException("Failed to get high watermark using rest api; error - " + e.getMessage(),e);
  }
}
