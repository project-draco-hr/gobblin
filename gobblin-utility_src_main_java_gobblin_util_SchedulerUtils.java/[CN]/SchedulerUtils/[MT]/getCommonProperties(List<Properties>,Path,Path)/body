{
  Configuration conf=new Configuration();
  try (FileSystem fileSystem=jobConfigPathDir.getFileSystem(conf)){
    Preconditions.checkArgument(dirPath.toUri().normalize().getPath().startsWith(jobConfigPathDir.toUri().normalize().getPath()),String.format("%s is not an ancestor directory of %s",jobConfigPathDir,dirPath));
    while (!dirPath.equals(jobConfigPathDir.getParent())) {
      FileStatus[] propertiesFilesStatus=fileSystem.listStatus(dirPath,PROPERTIES_PATH_FILTER);
      ArrayList<String> propertiesFilesList=new ArrayList<>();
      for (      FileStatus propertiesFileStatus : propertiesFilesStatus) {
        propertiesFilesList.add(propertiesFileStatus.getPath().getName());
      }
      String[] propertiesFiles=propertiesFilesList.toArray(new String[propertiesFilesList.size()]);
      if (propertiesFiles.length > 0) {
        if (propertiesFiles.length != 1) {
          throw new RuntimeException("Found more than one .properties file in directory: " + dirPath);
        }
        commonPropsList.add(ConfigurationConverter.getProperties(new PropertiesConfiguration((new Path(dirPath,propertiesFiles[0])).toUri().toURL())));
      }
      dirPath=dirPath.getParent();
    }
  }
 }
