{
  String[] propertiesFiles=jobConfigDir.list(new FilenameFilter(){
    @Override public boolean accept(    File file,    String name){
      return name.toLowerCase().endsWith(JOB_PROPS_FILE_EXTENSION);
    }
  }
);
  Closer closer=Closer.create();
  try {
    if (propertiesFiles != null && propertiesFiles.length > 0) {
      if (propertiesFiles.length != 1) {
        throw new RuntimeException("Found more than one .properties file in directory: " + jobConfigDir);
      }
      rootProps.load(closer.register(new InputStreamReader(new FileInputStream(new File(jobConfigDir,propertiesFiles[0])),Charset.defaultCharset())));
    }
    String[] names=jobConfigDir.list();
    if (names == null || names.length == 0) {
      return;
    }
    for (    String name : names) {
      File file=new File(jobConfigDir,name);
      if (file.isDirectory()) {
        Properties rootPropsCopy=new Properties();
        rootPropsCopy.putAll(rootProps);
        loadJobConfigsRecursive(jobConfigs,rootPropsCopy,jobConfigFileExtensions,file);
      }
 else {
        if (!jobConfigFileExtensions.contains(Files.getFileExtension(file.getName()).toLowerCase())) {
          LOGGER.warn("Skipped file " + file + " that has an unsupported extension");
          continue;
        }
        File doneFile=new File(file + ".done");
        if (doneFile.exists()) {
          LOGGER.info("Skipped job configuration file " + file + " for which a .done file exists");
          continue;
        }
        Properties jobProps=new Properties();
        jobProps.putAll(rootProps);
        jobProps.putAll(ConfigurationConverter.getProperties(new PropertiesConfiguration(file)));
        jobProps.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,file.getAbsolutePath());
        jobConfigs.add(jobProps);
      }
    }
  }
 catch (  Throwable t) {
    throw closer.rethrow(t);
  }
 finally {
    closer.close();
  }
}
