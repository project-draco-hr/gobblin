{
  String[] propertiesFiles=jobConfigDir.list(PROPERTIES_FILE_FILTER);
  if (propertiesFiles != null && propertiesFiles.length > 0) {
    if (propertiesFiles.length != 1) {
      throw new RuntimeException("Found more than one .properties file in directory: " + jobConfigDir);
    }
    rootProps.putAll(ConfigurationConverter.getProperties(new PropertiesConfiguration(new File(jobConfigDir,propertiesFiles[0]))));
  }
  String[] names=jobConfigDir.list(NON_PROPERTIES_FILE_FILTER);
  if (names == null || names.length == 0) {
    return;
  }
  for (  String name : names) {
    File file=new File(jobConfigDir,name);
    if (file.isDirectory()) {
      Properties rootPropsCopy=new Properties();
      rootPropsCopy.putAll(rootProps);
      loadJobConfigsRecursive(jobConfigs,rootPropsCopy,jobConfigFileExtensions,file);
    }
 else {
      if (!jobConfigFileExtensions.contains(Files.getFileExtension(file.getName()).toLowerCase())) {
        LOGGER.warn("Skipped file " + file + " that has an unsupported extension");
        continue;
      }
      File doneFile=new File(file + ".done");
      if (doneFile.exists()) {
        LOGGER.info("Skipped job configuration file " + file + " for which a .done file exists");
        continue;
      }
      Properties jobProps=new Properties();
      jobProps.putAll(rootProps);
      jobProps.putAll(ConfigurationConverter.getProperties(new PropertiesConfiguration(file)));
      jobProps.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,file.getAbsolutePath());
      jobConfigs.add(jobProps);
    }
  }
}
