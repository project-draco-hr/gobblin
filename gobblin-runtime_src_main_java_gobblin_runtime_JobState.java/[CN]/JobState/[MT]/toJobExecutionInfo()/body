{
  JobExecutionInfo jobExecutionInfo=new JobExecutionInfo();
  jobExecutionInfo.setJobName(this.jobName);
  jobExecutionInfo.setJobId(this.jobId);
  if (this.startTime > 0) {
    jobExecutionInfo.setStartTime(this.startTime);
  }
  if (this.endTime > 0) {
    jobExecutionInfo.setEndTime(this.endTime);
  }
  jobExecutionInfo.setDuration(this.duration);
  jobExecutionInfo.setState(JobStateEnum.valueOf(this.state.name()));
  jobExecutionInfo.setLaunchedTasks(this.taskCount);
  jobExecutionInfo.setCompletedTasks(this.getCompletedTasks());
  jobExecutionInfo.setLauncherType(getLauncherType());
  if (getTrackingURL().isPresent()) {
    jobExecutionInfo.setTrackingUrl(getTrackingURL().get());
  }
  TaskExecutionInfoArray taskExecutionInfos=new TaskExecutionInfoArray();
  for (  TaskState taskState : this.getTaskStates()) {
    taskExecutionInfos.add(taskState.toTaskExecutionInfo());
  }
  jobExecutionInfo.setTaskExecutions(taskExecutionInfos);
  JobMetrics jobMetrics=JobMetrics.get(this);
  MetricArray metricArray=new MetricArray();
  for (  Map.Entry<String,? extends com.codahale.metrics.Metric> entry : jobMetrics.getMetricContext().getCounters().entrySet()) {
    Metric counter=new Metric();
    counter.setGroup(MetricGroup.JOB.name());
    counter.setName(entry.getKey());
    counter.setType(MetricTypeEnum.valueOf(GobblinMetrics.MetricType.COUNTER.name()));
    counter.setValue(Long.toString(((Counter)entry.getValue()).getCount()));
    metricArray.add(counter);
  }
  for (  Map.Entry<String,? extends com.codahale.metrics.Metric> entry : jobMetrics.getMetricContext().getMeters().entrySet()) {
    Metric meter=new Metric();
    meter.setGroup(MetricGroup.JOB.name());
    meter.setName(entry.getKey());
    meter.setType(MetricTypeEnum.valueOf(GobblinMetrics.MetricType.METER.name()));
    meter.setValue(Double.toString(((Meter)entry.getValue()).getMeanRate()));
    metricArray.add(meter);
  }
  for (  Map.Entry<String,? extends com.codahale.metrics.Metric> entry : jobMetrics.getMetricContext().getGauges().entrySet()) {
    Metric gauge=new Metric();
    gauge.setGroup(MetricGroup.JOB.name());
    gauge.setName(entry.getKey());
    gauge.setType(MetricTypeEnum.valueOf(GobblinMetrics.MetricType.GAUGE.name()));
    gauge.setValue(((Gauge<?>)entry.getValue()).getValue().toString());
    metricArray.add(gauge);
  }
  jobExecutionInfo.setMetrics(metricArray);
  Map<String,String> jobProperties=Maps.newHashMap();
  for (  String name : this.getPropertyNames()) {
    String value=this.getProp(name);
    if (!Strings.isNullOrEmpty(value))     jobProperties.put(name,value);
  }
  jobExecutionInfo.setJobProperties(new StringMap(jobProperties));
  return jobExecutionInfo;
}
