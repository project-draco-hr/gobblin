{
  List<State> allJobProps=Lists.newArrayList();
  if (!fs.exists(this.topicInputDir)) {
    LOG.warn("Input folder " + this.topicInputDir + " does not exist. Skipping topic "+ topic);
    return allJobProps;
  }
  String folderStructure=getFolderStructure();
  for (  FileStatus status : this.fs.globStatus(new Path(this.topicInputDir,folderStructure))) {
    DateTime folderTime=null;
    try {
      folderTime=getFolderTime(status.getPath());
    }
 catch (    RuntimeException e) {
      LOG.warn(status.getPath() + " is not a valid folder. Will be skipped.");
      continue;
    }
    Path jobOutputDir=new Path(this.topicOutputDir,folderTime.toString(this.timeFormatter));
    Path jobTmpDir=new Path(this.topicTmpDir,folderTime.toString(this.timeFormatter));
    if (shouldProcessFolder(status.getPath(),jobOutputDir,folderTime)) {
      allJobProps.add(createJobProps(status.getPath(),jobOutputDir,jobTmpDir));
    }
  }
  return allJobProps;
}
