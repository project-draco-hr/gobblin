{
  Options options=buildOptions();
  try {
    CommandLine cmd=new DefaultParser().parse(options,args);
    if (!cmd.hasOption(GobblinYarnConfigurationKeys.APPLICATION_NAME_OPTION_NAME) || !cmd.hasOption(GobblinYarnConfigurationKeys.HELIX_INSTANCE_NAME_OPTION_NAME)) {
      printUsage(options);
      System.exit(1);
    }
    Log4jConfigurationHelper.updateLog4jConfiguration(GobblinWorkUnitRunner.class,Log4jConfigurationHelper.LOG4J_CONFIGURATION_FILE_NAME);
    ContainerId containerId=ConverterUtils.toContainerId(System.getenv().get(ApplicationConstants.Environment.CONTAINER_ID.key()));
    String applicationName=cmd.getOptionValue(GobblinYarnConfigurationKeys.APPLICATION_NAME_OPTION_NAME);
    String helixInstanceName=cmd.getOptionValue(GobblinYarnConfigurationKeys.HELIX_INSTANCE_NAME_OPTION_NAME);
    GobblinWorkUnitRunner gobblinWorkUnitRunner=new GobblinWorkUnitRunner(applicationName,helixInstanceName,containerId,ConfigFactory.load(),Optional.<Path>absent());
    gobblinWorkUnitRunner.start();
  }
 catch (  ParseException pe) {
    printUsage(options);
    System.exit(1);
  }
}
