{
  String watermarkColumn=this.workUnit.getProp(ConfigurationKeys.EXTRACT_DELTA_FIELDS_KEY);
  long lwm=this.workUnit.getLowWaterMark();
  long hwm=this.workUnit.getHighWaterMark();
  log.info("Low water mark: " + lwm + "; and High water mark: "+ hwm);
  WatermarkType watermarkType;
  if (StringUtils.isBlank(this.workUnit.getProp(ConfigurationKeys.SOURCE_QUERYBASED_WATERMARK_TYPE))) {
    watermarkType=null;
  }
 else {
    watermarkType=WatermarkType.valueOf(this.workUnit.getProp(ConfigurationKeys.SOURCE_QUERYBASED_WATERMARK_TYPE).toUpperCase());
  }
  try {
    this.setTimeOut(this.workUnit.getPropAsInt(ConfigurationKeys.SOURCE_CONN_TIMEOUT,ConfigurationKeys.DEFAULT_CONN_TIMEOUT));
    this.extractMetadata(this.schema,this.entity,this.workUnit);
    if (StringUtils.isNotBlank(watermarkColumn)) {
      this.highWatermark=this.getLatestWatermark(watermarkColumn,watermarkType,lwm,hwm);
      this.log.info("High water mark from source: " + this.highWatermark);
      long currentRunHighWatermark=(this.highWatermark != ConfigurationKeys.DEFAULT_WATERMARK_VALUE ? this.highWatermark : hwm);
      this.log.info("High water mark for the current run: " + currentRunHighWatermark);
      this.setRangePredicates(watermarkColumn,watermarkType,lwm,currentRunHighWatermark);
      this.highWatermark=currentRunHighWatermark;
    }
    if (!Boolean.valueOf(this.workUnit.getProp(ConfigurationKeys.SOURCE_QUERYBASED_SKIP_COUNT_CALC))) {
      this.sourceRecordCount=this.getSourceCount(this.schema,this.entity,this.workUnit,this.predicateList);
    }
 else {
      this.log.info("Skip count calculation");
      this.sourceRecordCount=-1;
    }
    if (this.sourceRecordCount == 0) {
      this.log.info("Record count is 0; Setting fetch status to false to skip readRecord()");
      this.setFetchStatus(false);
    }
  }
 catch (  SchemaException e) {
    throw new ExtractPrepareException("Failed to get schema for this object; error - " + e.getMessage(),e);
  }
catch (  HighWatermarkException e) {
    throw new ExtractPrepareException("Failed to get high watermark; error - " + e.getMessage(),e);
  }
catch (  RecordCountException e) {
    throw new ExtractPrepareException("Failed to get record count; error - " + e.getMessage(),e);
  }
catch (  Exception e) {
    throw new ExtractPrepareException("Failed to prepare the extract build; error - " + e.getMessage(),e);
  }
  return this;
}
