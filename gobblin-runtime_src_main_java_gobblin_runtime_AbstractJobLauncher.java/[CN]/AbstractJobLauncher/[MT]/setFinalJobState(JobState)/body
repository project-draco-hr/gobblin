{
  jobState.setEndTime(System.currentTimeMillis());
  jobState.setDuration(jobState.getEndTime() - jobState.getStartTime());
  for (  TaskState taskState : jobState.getTaskStates()) {
    jobState.setProp(ConfigurationKeys.FORK_BRANCHES_KEY,taskState.getPropAsInt(ConfigurationKeys.FORK_BRANCHES_KEY,1));
    if (taskState.getWorkingState() != WorkUnitState.WorkingState.SUCCESSFUL && this.jobContext.getJobCommitPolicy() == JobCommitPolicy.COMMIT_ON_FULL_SUCCESS) {
      LOG.info(String.format("Task %s completed with state %s; setting job state to %s as not all tasks " + "completed successfully.",taskState.getTaskId(),taskState.getWorkingState().toString(),JobState.RunningState.FAILED));
      jobState.setState(JobState.RunningState.FAILED);
      break;
    }
  }
  if (jobState.getState() == JobState.RunningState.SUCCESSFUL) {
    jobState.setProp(ConfigurationKeys.JOB_FAILURES_KEY,0);
  }
  if (jobState.getState() == JobState.RunningState.FAILED) {
    int failures=jobState.getPropAsInt(ConfigurationKeys.JOB_FAILURES_KEY,0) + 1;
    jobState.setProp(ConfigurationKeys.JOB_FAILURES_KEY,failures);
  }
}
