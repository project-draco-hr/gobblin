{
synchronized (this.cancellationRequest) {
    if (this.cancellationRequested) {
      return;
    }
    this.cancellationRequested=true;
    this.cancellationRequest.notify();
  }
synchronized (this.cancellationExecution) {
    try {
      while (!this.cancellationExecuted) {
        this.cancellationExecution.wait();
      }
      notifyListeners(this.jobContext,jobListener,TimingEvent.LauncherTimings.JOB_CANCEL,new JobListenerAction(){
        @Override public void apply(        JobListener jobListener,        JobContext jobContext) throws Exception {
          jobListener.onJobCancellation(jobContext);
        }
      }
);
    }
 catch (    InterruptedException ie) {
      Thread.currentThread().interrupt();
    }
  }
}
