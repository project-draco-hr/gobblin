{
  super.updateTaskMetrics();
  WorkUnit workUnit=this.task.getTaskState().getWorkunit();
  if (JobMetrics.isEnabled(workUnit)) {
    JobMetrics metrics=JobMetrics.get(this.task.getTaskState().getProp(ConfigurationKeys.JOB_NAME_KEY),this.task.getJobId());
    if (workUnit.getPropAsBoolean(ConfigurationKeys.MR_INCLUDE_TASK_COUNTERS_KEY,ConfigurationKeys.DEFAULT_MR_INCLUDE_TASK_COUNTERS)) {
      Map<String,? extends Metric> taskLevelCounters=metrics.getMetricsOfType(JobMetrics.MetricType.COUNTER,JobMetrics.MetricGroup.TASK,this.task.getTaskId());
      for (      Map.Entry<String,? extends Metric> entry : taskLevelCounters.entrySet()) {
        this.context.getCounter(JobMetrics.MetricGroup.TASK.name(),entry.getKey()).setValue(((Counter)entry.getValue()).getCount());
      }
    }
  }
  this.context.progress();
}
