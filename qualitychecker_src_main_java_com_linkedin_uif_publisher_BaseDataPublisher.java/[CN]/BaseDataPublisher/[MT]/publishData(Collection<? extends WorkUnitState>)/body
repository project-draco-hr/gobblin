{
  collectExtractMapping(states);
  for (  Map.Entry<Extract,List<WorkUnitState>> entry : extractToStateMap.entrySet()) {
    Extract extract=entry.getKey();
    WorkUnitState workUnitState=entry.getValue().get(0);
    int branches=workUnitState.getPropAsInt(ConfigurationKeys.FORK_BRANCHES_KEY,1);
    for (int i=0; i < branches; i++) {
      String branchName=ForkOperatorUtils.getBranchName(workUnitState,i,ConfigurationKeys.DEFAULT_FORK_BRANCH_NAME + i);
      Path tmpOutput=new Path(workUnitState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_OUTPUT_DIR,branches,i)),ForkOperatorUtils.getPathForBranch(extract.getOutputFilePath(),branchName,branches));
      Path finalOutput=new Path(workUnitState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_FINAL_DIR,branches,i)),ForkOperatorUtils.getPathForBranch(extract.getOutputFilePath(),branchName,branches));
      if (!this.fss.get(i).exists(finalOutput.getParent())) {
        this.fss.get(i).mkdirs(finalOutput.getParent());
      }
      LOG.info(String.format("Attempting to move %s to %s",tmpOutput,finalOutput));
      if (this.fss.get(i).exists(finalOutput)) {
        if (this.getState().getPropAsBoolean(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_REPLACE_FINAL_DIR,branches,i))) {
          this.fss.get(i).delete(finalOutput,true);
        }
 else {
          for (          FileStatus status : this.fss.get(i).listStatus(tmpOutput)) {
            if (workUnitState.getPropAsBoolean(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.SOURCE_FILEBASED_PRESERVE_FILE_PATH,branches,i),false)) {
              this.fss.get(i).rename(status.getPath(),new Path(finalOutput,workUnitState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_FINAL_NAME,branches,i))));
            }
 else {
              this.fss.get(i).rename(status.getPath(),new Path(finalOutput,status.getPath().getName()));
            }
          }
          continue;
        }
      }
      if (this.fss.get(i).rename(tmpOutput,finalOutput)) {
        for (        WorkUnitState state : entry.getValue()) {
          if (state.getWorkingState() == WorkUnitState.WorkingState.SUCCESSFUL) {
            state.setWorkingState(WorkUnitState.WorkingState.COMMITTED);
          }
        }
      }
 else {
        throw new RuntimeException("Rename operation from " + tmpOutput + " to "+ finalOutput+ " failed!");
      }
    }
  }
}
