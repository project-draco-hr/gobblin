{
  Optional<Timer.Context> distributedCacheSetupTimer=Instrumented.timerContext(this.runtimeMetricContext,MetricNames.RunJobTimings.MR_DISTRIBUTED_CACHE_POPULATE);
  Path jarFileDir=new Path(this.mrJobDir,"_jars");
  if (jobProps.containsKey(ConfigurationKeys.FRAMEWORK_JAR_FILES_KEY)) {
    addJars(jarFileDir,jobProps.getProperty(ConfigurationKeys.FRAMEWORK_JAR_FILES_KEY));
  }
  if (jobProps.containsKey(ConfigurationKeys.JOB_JAR_FILES_KEY)) {
    addJars(jarFileDir,jobProps.getProperty(ConfigurationKeys.JOB_JAR_FILES_KEY));
  }
  if (jobProps.containsKey(ConfigurationKeys.JOB_LOCAL_FILES_KEY)) {
    addLocalFiles(new Path(this.mrJobDir,"_files"),jobProps.getProperty(ConfigurationKeys.JOB_LOCAL_FILES_KEY));
  }
  if (jobProps.containsKey(ConfigurationKeys.JOB_HDFS_FILES_KEY)) {
    addHDFSFiles(jobProps.getProperty(ConfigurationKeys.JOB_HDFS_FILES_KEY));
  }
  Instrumented.endTimer(distributedCacheSetupTimer);
}
