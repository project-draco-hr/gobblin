{
  WorkUnit workUnit=(value.toString().endsWith(MULTI_WORK_UNIT_FILE_EXTENSION) ? new MultiWorkUnit() : new WorkUnit());
  Closer closer=Closer.create();
  try {
    InputStream is=closer.register(this.fs.open(new Path(value.toString())));
    DataInputStream dis=closer.register((new DataInputStream(is)));
    workUnit.readFields(dis);
  }
 catch (  Throwable t) {
    throw closer.rethrow(t);
  }
 finally {
    closer.close();
  }
  if (workUnit instanceof MultiWorkUnit) {
    this.workUnits.addAll(JobLauncherUtils.flattenWorkUnits(((MultiWorkUnit)workUnit).getWorkUnits()));
  }
 else {
    this.workUnits.add(workUnit);
  }
}
