{
  super(state);
  this.workUnitState=state;
  this.topicName=KafkaUtils.getTopicName(state);
  this.partitions=KafkaUtils.getPartitions(state);
  this.lowWatermark=GSON.fromJson(state.getWorkunit().getLowWatermark(),MultiLongWatermark.class);
  this.highWatermark=GSON.fromJson(state.getWorkunit().getExpectedHighWatermark(),MultiLongWatermark.class);
  this.nextWatermark=new MultiLongWatermark(this.lowWatermark);
  this.closer=Closer.create();
  this.kafkaWrapper=closer.register(KafkaWrapper.create(state));
  this.decodingErrorCount=Maps.newHashMap();
  this.totalEventSizes=Maps.newHashMapWithExpectedSize(this.partitions.size());
  this.eventCounts=Maps.newHashMapWithExpectedSize(this.partitions.size());
  this.avgEventSizes=Maps.newHashMapWithExpectedSize(this.partitions.size());
  this.messageIterator=null;
  this.currentPartitionIdx=0;
  switchMetricContextToCurrentPartition();
}
