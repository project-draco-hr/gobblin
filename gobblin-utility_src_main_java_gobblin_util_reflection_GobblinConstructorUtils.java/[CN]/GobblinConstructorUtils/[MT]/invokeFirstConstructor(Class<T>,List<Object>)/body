{
  for (  List<Object> args : constructorArgs) {
    Class<?>[] parameterTypes=new Class[args.size()];
    for (int i=0; i < args.size(); i++) {
      parameterTypes[i]=args.get(i).getClass();
    }
    if (ConstructorUtils.getMatchingAccessibleConstructor(cls,parameterTypes) != null) {
      log.debug(String.format("Found accessible constructor with parameter types %s found",Arrays.asList(parameterTypes)));
      return ConstructorUtils.invokeConstructor(cls,args.toArray(new Object[args.size()]));
    }
    log.debug(String.format("No accessible constructor with parameter types %s found",Arrays.asList(parameterTypes)));
  }
  throw new NoSuchMethodException("No accessible constructor found");
}
