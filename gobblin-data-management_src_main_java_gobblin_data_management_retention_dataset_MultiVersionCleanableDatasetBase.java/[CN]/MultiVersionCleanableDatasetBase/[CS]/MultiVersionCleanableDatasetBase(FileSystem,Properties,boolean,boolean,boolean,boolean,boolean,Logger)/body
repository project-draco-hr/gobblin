{
  this.log=log;
  this.fs=fs;
  this.simulate=simulate;
  this.skipTrash=skipTrash;
  this.deleteEmptyDirectories=deleteEmptyDirectories;
  Properties thisProperties=new Properties();
  thisProperties.putAll(properties);
  if (this.simulate) {
    thisProperties.setProperty(TrashFactory.SIMULATE,Boolean.toString(true));
  }
  if (this.skipTrash) {
    thisProperties.setProperty(TrashFactory.SKIP_TRASH,Boolean.toString(true));
  }
  this.trash=TrashFactory.createProxiedTrash(this.fs,thisProperties);
  this.deleteAsOwner=deleteAsOwner;
  this.isDatasetBlacklisted=isDatasetBlacklisted;
}
