{
  CallbackResults<L,R> res=new CallbackResults<L,R>();
  if (0 == listeners.size()) {
    return res;
  }
  List<Callable<R>> callbacks=new ArrayList<>(listeners.size());
  for (  L listener : listeners) {
    callbacks.add(new CallbackCallable<>(callback,listener));
  }
  List<Future<R>> futures=_execService.invokeAll(callbacks);
  for (int i=0; i < listeners.size(); ++i) {
    CallbackResult<R> cr=CallbackResult.createFromFuture(futures.get(i));
    L listener=listeners.get(i);
    if (cr.isCanceled()) {
      _log.warn("Callback cancelled: " + callbacks.get(i) + " on "+ listener);
      res.cancellations.put(listener,cr);
    }
 else     if (cr.hasFailed()) {
      _log.error("Callback error: " + callbacks.get(i) + " on "+ listener+ ":"+ cr.getError());
      res.failures.put(listener,cr);
    }
 else {
      res.successes.put(listener,cr);
    }
  }
  return res;
}
