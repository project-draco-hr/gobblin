{
  Assert.assertEquals(this.jobState.getJobName(),"TestJob");
  Assert.assertEquals(this.jobState.getJobId(),"TestJob-1");
  Assert.assertEquals(this.jobState.getId(),"TestJob-1");
  Assert.assertEquals(this.jobState.getStartTime(),this.startTime);
  Assert.assertEquals(this.jobState.getEndTime(),this.startTime + 1000);
  Assert.assertEquals(this.jobState.getDuration(),1000);
  Assert.assertEquals(this.jobState.getState(),JobState.RunningState.COMMITTED);
  Assert.assertEquals(this.jobState.getTasks(),3);
  Assert.assertEquals(this.jobState.getCompletedTasks(),3);
  Assert.assertEquals(this.jobState.getProp("foo"),"bar");
  List<String> taskStateIds=Lists.newArrayList();
  for (int i=0; i < this.jobState.getCompletedTasks(); i++) {
    TaskState taskState=this.jobState.getTaskStates().get(i);
    Assert.assertEquals(taskState.getJobId(),"TestJob-1");
    Assert.assertEquals(taskState.getStartTime(),this.startTime);
    Assert.assertEquals(taskState.getEndTime(),this.startTime + 1000);
    Assert.assertEquals(taskState.getTaskDuration(),1000);
    Assert.assertEquals(taskState.getWorkingState(),WorkUnitState.WorkingState.COMMITTED);
    Assert.assertEquals(taskState.getProp("foo"),"bar");
    taskStateIds.add(taskState.getTaskId());
  }
  Collections.sort(taskStateIds);
  Assert.assertEquals(taskStateIds,Lists.newArrayList("TestTask-0","TestTask-1","TestTask-2"));
}
