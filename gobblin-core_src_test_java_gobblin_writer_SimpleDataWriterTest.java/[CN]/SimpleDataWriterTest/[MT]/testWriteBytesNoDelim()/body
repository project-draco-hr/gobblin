{
  properties.setProp(ConfigurationKeys.SIMPLE_WRITER_DELIMITER,"");
  DataWriter<byte[]> writer=new SimpleDataWriterBuilder().writeTo(Destination.of(Destination.DestinationType.HDFS,properties)).writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).withSchema(this.schema).forBranch(0).build();
  byte[] rec1={1,2,3,4,5,6,7,8,9,0};
  byte[] rec2={11,12,13,14,15,16,17,18,19,20,21,22,23,24,25};
  byte[] rec3={26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45};
  writer.write(rec1);
  writer.write(rec2);
  writer.write(rec3);
  writer.close();
  writer.commit();
  Assert.assertEquals(writer.recordsWritten(),3);
  Assert.assertEquals(writer.bytesWritten(),rec1.length + rec2.length + rec3.length);
  String pathKey=ConfigurationKeys.WRITER_FINAL_OUTPUT_FILE_PATHS;
  Assert.assertTrue(properties.contains(pathKey));
  File outputFile=new File(properties.getProp(pathKey));
  InputStream is=new FileInputStream(outputFile);
  int c, resNum=0, resi=0;
  byte[][] records={rec1,rec2,rec3};
  while ((c=is.read()) != -1) {
    if (resi >= records[resNum].length) {
      resNum++;
      resi=0;
    }
    Assert.assertEquals(c,records[resNum][resi]);
    resi++;
  }
}
