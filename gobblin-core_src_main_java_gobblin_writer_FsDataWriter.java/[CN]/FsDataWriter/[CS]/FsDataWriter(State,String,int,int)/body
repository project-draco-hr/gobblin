{
  this.properties=properties;
  String uri=properties.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_SYSTEM_URI,numBranches,branchId),ConfigurationKeys.LOCAL_FS_URI);
  Configuration conf=new Configuration();
  for (  String key : properties.getPropertyNames()) {
    conf.set(key,properties.getProp(key));
  }
  this.fs=FileSystem.get(URI.create(uri),conf);
  this.stagingFile=new Path(WriterUtils.getWriterStagingDir(properties,numBranches,branchId),fileName);
  this.outputFile=new Path(WriterUtils.getWriterOutputDir(properties,numBranches,branchId),fileName);
  properties.setProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FINAL_OUTPUT_PATH,branchId),this.outputFile.toString());
  if (this.fs.exists(this.stagingFile)) {
    LOG.warn(String.format("Task staging file %s already exists, deleting it",this.stagingFile));
    HadoopUtils.deletePath(this.fs,this.stagingFile,false);
  }
  if (!this.fs.exists(this.outputFile.getParent())) {
    this.fs.mkdirs(this.outputFile.getParent());
  }
}
