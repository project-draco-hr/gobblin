{
  String converterClassKey=ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.CONVERTER_CLASSES_KEY,index);
  if (!this.workUnit.contains(converterClassKey)) {
    return Collections.emptyList();
  }
  List<Converter<?,?,?,?>> converters=Lists.newArrayList();
  for (  String converterClass : Splitter.on(",").omitEmptyStrings().trimResults().split(this.workUnit.getProp(converterClassKey))) {
    try {
      Converter<?,?,?,?> converter=(Converter<?,?,?,?>)Class.forName(converterClass).newInstance();
      converter.init(this.workUnitState);
      converters.add(converter);
    }
 catch (    ClassNotFoundException cnfe) {
      throw new RuntimeException(cnfe);
    }
catch (    InstantiationException ie) {
      throw new RuntimeException(ie);
    }
catch (    IllegalAccessException iae) {
      throw new RuntimeException(iae);
    }
  }
  return converters;
}
