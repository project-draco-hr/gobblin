{
  for (  TaskState taskState : jobState.getTaskStates()) {
    int branches=taskState.getPropAsInt(ConfigurationKeys.FORK_BRANCHES_KEY,1);
    for (int i=0; i < branches; i++) {
      try {
        String writerFsUri=taskState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_SYSTEM_URI,branches,i),ConfigurationKeys.LOCAL_FS_URI);
        FileSystem fs=FileSystem.get(URI.create(writerFsUri),new Configuration());
        String writerFilePath=taskState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_PATH,branches,i));
        if (Strings.isNullOrEmpty(writerFilePath)) {
          continue;
        }
        String stagingDirKey=ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_STAGING_DIR,branches > 1 ? i : -1);
        if (taskState.contains(stagingDirKey)) {
          Path stagingPath=new Path(taskState.getProp(stagingDirKey),writerFilePath);
          if (fs.exists(stagingPath)) {
            LOG.info("Cleaning up staging directory " + stagingPath.toUri().getPath());
            fs.delete(stagingPath,true);
          }
        }
        String outputDirKey=ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_OUTPUT_DIR,branches > 1 ? i : -1);
        if (taskState.contains(outputDirKey)) {
          Path outputPath=new Path(taskState.getProp(outputDirKey),writerFilePath);
          if (fs.exists(outputPath)) {
            LOG.info("Cleaning up output directory " + outputPath.toUri().getPath());
            fs.delete(outputPath,true);
          }
        }
      }
 catch (      IOException ioe) {
        LOG.error(String.format("Failed to clean staging data for branch %d of task %s",i,taskState.getTaskId()),ioe);
      }
    }
  }
}
