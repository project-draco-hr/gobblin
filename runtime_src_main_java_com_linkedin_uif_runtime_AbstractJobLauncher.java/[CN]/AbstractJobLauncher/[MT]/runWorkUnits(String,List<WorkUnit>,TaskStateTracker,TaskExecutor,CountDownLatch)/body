{
  List<Task> tasks=Lists.newArrayList();
  for (  WorkUnit workUnit : workUnits) {
    String taskId=workUnit.getProp(ConfigurationKeys.TASK_ID_KEY);
    WorkUnitState workUnitState=new WorkUnitState(workUnit);
    workUnitState.setId(taskId);
    workUnitState.setProp(ConfigurationKeys.JOB_ID_KEY,jobId);
    workUnitState.setProp(ConfigurationKeys.TASK_ID_KEY,taskId);
    Task task=new Task(new TaskContext(workUnitState),stateTracker,Optional.of(countDownLatch));
    stateTracker.registerNewTask(task);
    tasks.add(task);
    LOG.info(String.format("Submitting task %s to run",taskId));
    taskExecutor.submit(task);
  }
  LOG.info(String.format("Waiting for submitted tasks of job %s to complete...",jobId));
  while (countDownLatch.getCount() > 0) {
    LOG.info(String.format("%d out of %d tasks of job %s are running",countDownLatch.getCount(),workUnits.size(),jobId));
    countDownLatch.await(1,TimeUnit.MINUTES);
  }
  LOG.info(String.format("All tasks of job %s have completed",jobId));
  return tasks;
}
