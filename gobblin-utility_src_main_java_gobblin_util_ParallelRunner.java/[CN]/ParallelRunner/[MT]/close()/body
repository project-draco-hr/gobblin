{
  try {
    boolean wasInterrupted=false;
    IOException exception=null;
    for (    NamedFuture future : this.futures) {
      try {
        if (wasInterrupted) {
          future.getFuture().cancel(true);
        }
 else {
          future.getFuture().get();
        }
      }
 catch (      InterruptedException ie) {
        LOGGER.warn("Task was interrupted: " + future.getName());
        wasInterrupted=true;
        if (exception == null) {
          Thread.currentThread().interrupt();
          exception=new IOException(ie);
        }
      }
catch (      ExecutionException ee) {
        LOGGER.warn("Task failed: " + future.getName(),ee.getCause());
        if (exception == null) {
          exception=new IOException(ee.getCause());
        }
      }
    }
    if (exception != null && this.failPolicy == FailPolicy.FAIL_ONE_FAIL_ALL) {
      throw exception;
    }
  }
  finally {
    ExecutorsUtils.shutdownExecutorService(this.executor,Optional.of(LOGGER));
  }
}
