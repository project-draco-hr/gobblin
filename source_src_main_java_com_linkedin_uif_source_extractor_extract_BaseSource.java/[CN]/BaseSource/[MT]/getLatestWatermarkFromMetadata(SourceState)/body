{
  log.debug("Get latest watermark from the previou run");
  long latestWaterMark=ConfigurationKeys.DEFAULT_WATERMARK_VALUE;
  List<WorkUnitState> previousWorkUnitStates=state.getPreviousStates();
  List<Long> previousWorkUnitStateHighWatermarks=new ArrayList<Long>();
  List<Long> previousWorkUnitLowWatermarks=new ArrayList<Long>();
  if (previousWorkUnitStates.size() == 0) {
    log.info("Previous states are not found; Latest watermark - Default watermark: " + latestWaterMark);
    return latestWaterMark;
  }
  boolean hasFailedRun=false;
  boolean isCommitOnFullSuccess=false;
  for (  WorkUnitState workUnitState : previousWorkUnitStates) {
    JobCommitPolicy commitPolicy=JobCommitPolicy.forName(workUnitState.getWorkunit().getProp(ConfigurationKeys.JOB_COMMIT_POLICY_KEY,ConfigurationKeys.DEFAULT_JOB_COMMIT_POLICY));
    log.info("Commit policy of the previous task " + workUnitState.getId() + ":"+ commitPolicy);
    if (commitPolicy == JobCommitPolicy.COMMIT_ON_FULL_SUCCESS) {
      isCommitOnFullSuccess=true;
    }
    log.info("State of the previous task: " + workUnitState.getId() + ":"+ workUnitState.getWorkingState());
    if (workUnitState.getWorkingState() == WorkingState.FAILED || workUnitState.getWorkingState() == WorkingState.ABORTED) {
      hasFailedRun=true;
    }
    log.info("High watermark of the previous task: " + workUnitState.getId() + ":"+ workUnitState.getHighWaterMark()+ "\n");
    previousWorkUnitStateHighWatermarks.add(workUnitState.getHighWaterMark());
    previousWorkUnitLowWatermarks.add(this.getLowWatermarkFromWorkUnit(workUnitState));
  }
  if (previousWorkUnitStateHighWatermarks.isEmpty()) {
    latestWaterMark=ConfigurationKeys.DEFAULT_WATERMARK_VALUE;
    log.info("Previous states are not found; Latest watermark - Default watermark: " + latestWaterMark);
  }
 else   if (isCommitOnFullSuccess && hasFailedRun) {
    latestWaterMark=Collections.min(previousWorkUnitLowWatermarks);
    log.info("Previous job was COMMIT_ON_FULL_SUCCESS but it was failed; Latest watermark - Min watermark from WorkUnits: " + latestWaterMark);
  }
 else {
    latestWaterMark=Collections.max(previousWorkUnitStateHighWatermarks);
    log.info("Latest watermark - Max watermark from WorkUnitStates: " + latestWaterMark);
  }
  return latestWaterMark;
}
