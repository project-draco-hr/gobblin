{
  Extractor extractor=null;
  DataWriter writer=null;
  MetaStoreClient metaStoreClient=null;
  long startTime=System.currentTimeMillis();
  this.taskState.setStartTime(startTime);
  try {
    extractor=this.taskContext.getSource().getExtractor(this.taskState);
    boolean doConversion=!this.taskContext.getConverters().isEmpty();
    Object sourceSchema=extractor.getSchema();
    Converter converter=null;
    Object schemaForWriter=sourceSchema;
    if (doConversion) {
      converter=new MultiConverter(this.taskContext.getConverters());
      schemaForWriter=converter.convertSchema(sourceSchema,this.taskState);
    }
    writer=buildWriter(this.taskContext,schemaForWriter);
    this.taskState.setWorkingState(WorkUnitState.WorkingState.WORKING);
    this.taskStateTracker.registerNewTask(this);
    Object record;
    while ((record=extractor.readRecord()) != null) {
      if (doConversion) {
        record=converter.convertRecord(sourceSchema,record,this.taskState);
      }
      writer.write(record);
    }
    this.taskState.setProp(ConfigurationKeys.QUALITY_CHECKER_PREFIX + ConfigurationKeys.EXTRACTOR_ROWS_READ,extractor.getExpectedRecordCount());
    this.taskState.setProp(ConfigurationKeys.QUALITY_CHECKER_PREFIX + ConfigurationKeys.WRITER_ROWS_WRITTEN,writer.recordsWritten());
    this.taskState.setProp(ConfigurationKeys.WRITER_OUTPUT_SCHEMA,sourceSchema);
    metaStoreClient=buildMetaStoreClient(this.taskState);
    PolicyChecker policyChecker=buildPolicyChecker(this.taskState,metaStoreClient);
    PolicyCheckResults results=policyChecker.executePolicies();
    TaskPublisher publisher=buildTaskPublisher(this.taskState,results);
switch (publisher.publish()) {
case SUCCESS:
      writer.commit();
    this.taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);
  break;
default :
this.taskState.setWorkingState(WorkUnitState.WorkingState.FAILED);
break;
}
}
 catch (Exception e) {
LOG.error(String.format("Task %s failed",this.taskId),e);
this.taskState.setWorkingState(WorkUnitState.WorkingState.FAILED);
}
 finally {
if (extractor != null) {
try {
extractor.close();
}
 catch (Exception ioe) {
}
}
if (writer != null) {
try {
writer.cleanup();
writer.close();
}
 catch (IOException ioe) {
}
}
if (metaStoreClient != null) {
try {
metaStoreClient.close();
}
 catch (Exception e) {
}
}
long endTime=System.currentTimeMillis();
this.taskState.setEndTime(endTime);
this.taskState.setTaskDuration(endTime - startTime);
this.taskStateTracker.onTaskCompletion(this);
}
}
