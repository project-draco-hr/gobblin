{
  try {
    return USER_NAME_TO_FILESYSTEM_CACHE.get(userNameToProxyAs,new Callable<FileSystem>(){
      @Override public FileSystem call() throws Exception {
        return ProxiedFileSystemUtils.createProxiedFileSystem(userNameToProxyAs,properties,fsURI,configuration);
      }
    }
);
  }
 catch (  ExecutionException ee) {
    throw new IOException("Failed to get proxied file system for user " + userNameToProxyAs,ee);
  }
}
