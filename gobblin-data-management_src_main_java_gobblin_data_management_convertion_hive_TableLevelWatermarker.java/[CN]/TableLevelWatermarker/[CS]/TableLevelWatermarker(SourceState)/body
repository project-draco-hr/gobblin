{
  this.tableWatermarks=Maps.newHashMap();
  SourceState sourceState=state;
  for (  Map.Entry<String,Iterable<WorkUnitState>> datasetWorkUnitStates : sourceState.getPreviousWorkUnitStatesByDatasetUrns().entrySet()) {
    LongWatermark tableWatermark=Collections.min(Lists.newArrayList(Iterables.transform(datasetWorkUnitStates.getValue(),new Function<WorkUnitState,LongWatermark>(){
      @Override public LongWatermark apply(      WorkUnitState w){
        return GSON.fromJson(w.getActualHighWatermark(),LongWatermark.class);
      }
    }
)));
    this.tableWatermarks.put(datasetWorkUnitStates.getKey(),tableWatermark);
  }
}
