{
  StringBuilder userDataCmds=new StringBuilder();
  String clusterWorkerClassName=GobblinAWSClusterMaster.class.getSimpleName();
  String nfsDir=this.nfsParentDir + File.separator + this.clusterName;
  String nfsMountCmd=String.format("sudo mount -t %s %s:%s %s",NFS_TYPE_4,this.masterPublicIp,nfsDir,nfsDir);
  userDataCmds.append("mkdir -p ").append(nfsDir).append("\n");
  userDataCmds.append(nfsMountCmd).append("\n");
  userDataCmds.append("mkdir -p ").append(this.sinkLogRootDir).append("\n");
  String classpath=getClasspathFromPaths(new File(this.workerConfLocalDir),new File(this.workerJarsDir),new File(this.libJarsDir));
  String helixInstanceName=HelixUtils.getHelixInstanceName(GobblinAWSTaskRunner.class.getSimpleName(),helixInstanceIdGenerator.incrementAndGet());
  StringBuilder launchGobblinClusterWorkerCmd=new StringBuilder().append("java").append(" -cp ").append(classpath).append(" -Xmx ").append(memory).append(" ").append(this.workerJvmArgs.or("")).append(" ").append(GobblinAWSTaskRunner.class.getName()).append(" --").append(GobblinClusterConfigurationKeys.APPLICATION_NAME_OPTION_NAME).append(" ").append(this.clusterName).append(" --").append(GobblinClusterConfigurationKeys.HELIX_INSTANCE_NAME_OPTION_NAME).append(" ").append(helixInstanceName).append(" 1>").append(this.sinkLogRootDir).append(File.separator).append(clusterWorkerClassName).append(".").append(helixInstanceName).append(".").append(GobblinAWSClusterLauncher.STDOUT).append(" 2>").append(this.sinkLogRootDir).append(File.separator).append(clusterWorkerClassName).append(".").append(helixInstanceName).append(".").append(GobblinAWSClusterLauncher.STDERR);
  userDataCmds.append(launchGobblinClusterWorkerCmd);
  return userDataCmds.toString();
}
