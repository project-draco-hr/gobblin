{
  this.config=config;
  this.clusterName=config.getString(GobblinAWSConfigurationKeys.CLUSTER_NAME_KEY);
  String zkConnectionString=config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY);
  LOGGER.info("Using ZooKeeper connection string: " + zkConnectionString);
  this.helixManager=HelixManagerFactory.getZKHelixManager(config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY),GobblinClusterUtils.getHostname(),InstanceType.SPECTATOR,zkConnectionString);
  this.awsRegion=config.getString(GobblinAWSConfigurationKeys.AWS_REGION);
  this.masterAmiId=config.getString(GobblinAWSConfigurationKeys.MASTER_AMI_ID);
  this.masterInstanceType=config.getString(GobblinAWSConfigurationKeys.MASTER_INSTANCE_TYPE);
  this.masterJvmMemory=config.getString(GobblinAWSConfigurationKeys.MASTER_JVM_MEMORY);
  this.workerAmiId=config.getString(GobblinAWSConfigurationKeys.WORKER_AMI_ID);
  this.workerInstanceType=config.getString(GobblinAWSConfigurationKeys.WORKER_INSTANCE_TYPE);
  this.workerJvmMemory=config.getString(GobblinAWSConfigurationKeys.WORKER_JVM_MEMORY);
  this.minWorkers=config.getInt(GobblinAWSConfigurationKeys.MIN_WORKERS);
  this.maxWorkers=config.getInt(GobblinAWSConfigurationKeys.MAX_WORKERS);
  this.desiredWorkers=config.getInt(GobblinAWSConfigurationKeys.DESIRED_WORKERS);
  this.masterJvmArgs=config.hasPath(GobblinAWSConfigurationKeys.MASTER_JVM_ARGS_KEY) ? Optional.of(config.getString(GobblinAWSConfigurationKeys.MASTER_JVM_ARGS_KEY)) : Optional.<String>absent();
  this.workerJvmArgs=config.hasPath(GobblinAWSConfigurationKeys.WORKER_JVM_ARGS_KEY) ? Optional.of(config.getString(GobblinAWSConfigurationKeys.WORKER_JVM_ARGS_KEY)) : Optional.<String>absent();
  this.nfsParentDir=config.getString(GobblinAWSConfigurationKeys.NFS_PARENT_DIR);
  this.masterJarsDir=config.getString(GobblinAWSConfigurationKeys.MASTER_JARS_KEY);
  this.masterClusterConfS3Uri=config.getString(GobblinAWSConfigurationKeys.MASTER_FILES_S3_KEY);
  this.workerJarsDir=config.getString(GobblinAWSConfigurationKeys.WORKER_JARS_KEY);
  this.workerClusterConfS3Uri=config.getString(GobblinAWSConfigurationKeys.WORKER_FILES_S3_KEY);
  this.sinkLogRootDir=config.getString(GobblinAWSConfigurationKeys.LOGS_SINK_ROOT_DIR_KEY);
  this.emailNotificationOnShutdown=config.getBoolean(GobblinAWSConfigurationKeys.EMAIL_NOTIFICATION_ON_SHUTDOWN_KEY);
}
