{
  ParallelRunner parallelRunner=this.getParallelRunner(this.writerFileSystemByBranches.get(branchId));
  Path writerOutputDir=WriterUtils.getWriterOutputDir(state,this.numBranches,branchId);
  if (!this.writerFileSystemByBranches.get(branchId).exists(writerOutputDir)) {
    LOG.warn(String.format("Branch %d of WorkUnit %s produced no data",branchId,state.getId()));
    return;
  }
  Path publisherOutputDir=getPublisherOutputDir(state,branchId);
  if (publishSingleTaskData) {
    WriterUtils.mkdirsWithRecursivePermission(this.publisherFileSystemByBranches.get(branchId),publisherOutputDir,this.permissions.get(branchId));
    addSingleTaskWriterOutputToExistingDir(writerOutputDir,publisherOutputDir,state,branchId,parallelRunner);
  }
 else {
    if (writerOutputPathsMoved.contains(writerOutputDir)) {
      return;
    }
    if (this.publisherFileSystemByBranches.get(branchId).exists(publisherOutputDir)) {
      boolean replaceFinalOutputDir=this.getState().getPropAsBoolean(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_REPLACE_FINAL_DIR,this.numBranches,branchId));
      if (!replaceFinalOutputDir) {
        addWriterOutputToExistingDir(writerOutputDir,publisherOutputDir,state,branchId,parallelRunner);
        writerOutputPathsMoved.add(writerOutputDir);
        return;
      }
      LOG.info("Deleting publisher output dir " + publisherOutputDir);
      this.publisherFileSystemByBranches.get(branchId).delete(publisherOutputDir,true);
    }
 else {
      WriterUtils.mkdirsWithRecursivePermission(this.publisherFileSystemByBranches.get(branchId),publisherOutputDir.getParent(),this.permissions.get(branchId));
    }
    movePath(parallelRunner,writerOutputDir,publisherOutputDir,branchId);
    writerOutputPathsMoved.add(writerOutputDir);
  }
}
