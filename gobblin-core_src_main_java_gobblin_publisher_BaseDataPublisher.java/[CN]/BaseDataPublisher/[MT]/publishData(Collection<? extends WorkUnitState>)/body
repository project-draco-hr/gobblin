{
  Set<Path> writerOutputPathsMoved=Sets.newHashSet();
  for (  WorkUnitState workUnitState : states) {
    for (int i=0; i < this.numBranches; i++) {
      String writerFilePathKey=ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.WRITER_FILE_PATH,this.numBranches,i);
      if (!workUnitState.contains(writerFilePathKey)) {
        continue;
      }
      Path writerOutputDir=WriterUtils.getWriterOutputDir(workUnitState,this.numBranches,i);
      Path publisherOutputDir=WriterUtils.getDataPublisherFinalDir(workUnitState,this.numBranches,i);
      if (writerOutputPathsMoved.contains(writerOutputDir)) {
        continue;
      }
      if (this.fss.get(i).exists(publisherOutputDir)) {
        boolean replaceFinalOutputDir=this.getState().getPropAsBoolean(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_REPLACE_FINAL_DIR,this.numBranches,i));
        if (!replaceFinalOutputDir) {
          boolean preserveFileName=workUnitState.getPropAsBoolean(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.SOURCE_FILEBASED_PRESERVE_FILE_NAME,this.numBranches,i),false);
          for (          FileStatus status : this.fss.get(i).listStatus(writerOutputDir)) {
            Path finalOutputPath=preserveFileName ? new Path(publisherOutputDir,workUnitState.getProp(ForkOperatorUtils.getPropertyNameForBranch(ConfigurationKeys.DATA_PUBLISHER_FINAL_NAME,this.numBranches,i))) : new Path(publisherOutputDir,status.getPath().getName());
            if (this.fss.get(i).rename(status.getPath(),finalOutputPath)) {
              LOG.info(String.format("Moved %s to %s",status.getPath(),finalOutputPath));
            }
 else {
              throw new IOException("Failed to move file from " + status.getPath() + " to "+ finalOutputPath);
            }
          }
          writerOutputPathsMoved.add(writerOutputDir);
          continue;
        }
        this.fss.get(i).delete(publisherOutputDir,true);
      }
 else {
        this.fss.get(i).mkdirs(publisherOutputDir.getParent());
      }
      if (this.fss.get(i).exists(writerOutputDir)) {
        if (this.fss.get(i).rename(writerOutputDir,publisherOutputDir)) {
          LOG.info(String.format("Moved %s to %s",writerOutputDir,publisherOutputDir));
          writerOutputPathsMoved.add(writerOutputDir);
        }
 else {
          throw new IOException("Failed to move from " + writerOutputDir + " to "+ publisherOutputDir);
        }
      }
 else {
        LOG.warn("WorkUnit " + workUnitState.getId() + " produced no data");
      }
    }
    workUnitState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);
  }
}
