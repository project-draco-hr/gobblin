{
  String dbName="testdb4";
  String tableName1="testtable1";
  String tableSdLoc1="/tmp/testtable1";
  String tableName2="testtable2";
  String tableSdLoc2="/tmp/testtable2";
  this.hiveMetastoreTestUtils.getLocalMetastoreClient().dropDatabase(dbName,false,true,true);
  this.hiveMetastoreTestUtils.createTestTable(dbName,tableName1,tableSdLoc1,Optional.<String>absent());
  this.hiveMetastoreTestUtils.createTestTable(dbName,tableName2,tableSdLoc2,Optional.<String>absent(),true);
  List<WorkUnitState> previousWorkUnitStates=Lists.newArrayList();
  Table table1=this.hiveMetastoreTestUtils.getLocalMetastoreClient().getTable(dbName,tableName1);
  previousWorkUnitStates.add(ConversionHiveTestUtils.createWus(dbName,tableName1,TimeUnit.MILLISECONDS.convert(table1.getCreateTime(),TimeUnit.SECONDS)));
  SourceState testState=new SourceState(getTestState(dbName),previousWorkUnitStates);
  testState.setProp(HiveSource.HIVE_SOURCE_WATERMARKER_FACTORY_CLASS_KEY,TableLevelWatermarker.Factory.class.getName());
  List<WorkUnit> workUnits=this.hiveSource.getWorkunits(testState);
  Assert.assertEquals(workUnits.size(),1);
  WorkUnit wu=workUnits.get(0);
  HiveWorkUnit hwu=new HiveWorkUnit(wu);
  Assert.assertEquals(hwu.getHiveDataset().getDbAndTable().getDb(),dbName);
  Assert.assertEquals(hwu.getHiveDataset().getDbAndTable().getTable(),tableName2);
}
