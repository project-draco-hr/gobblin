{
  this.dataset=dataset;
  this.jobProps=dataset.jobProps();
  this.topic=jobProps.getProp(MRCompactor.COMPACTION_TOPIC);
  this.inputPath=new Path(jobProps.getProp(MRCompactor.COMPACTION_JOB_INPUT_DIR));
  this.outputPath=new Path(jobProps.getProp(MRCompactor.COMPACTION_JOB_DEST_DIR));
  this.tmpPath=new Path(jobProps.getProp(MRCompactor.COMPACTION_JOB_TMP_DIR));
  this.fs=fs;
  this.perm=HadoopUtils.deserializeFsPermission(this.jobProps,COMPACTION_JOB_OUTPUT_DIR_PERMISSION,FsPermission.getDefault());
  this.deduplicate=this.jobProps.getPropAsBoolean(MRCompactor.COMPACTION_DEDUPLICATE,MRCompactor.DEFAULT_COMPACTION_DEDUPLICATE);
  this.priority=priority;
  this.eventSubmitter=new EventSubmitter.Builder(GobblinMetrics.get(this.jobProps.getProp(ConfigurationKeys.JOB_NAME_KEY)).getMetricContext(),MRCompactor.COMPACTION_TRACKING_EVENTS_NAMESPACE).build();
  try {
    this.recordCountProvider=new LateFileRecordCountProvider((RecordCountProvider)Class.forName(this.jobProps.getProp(MRCompactor.COMPACTION_RECORD_COUNT_PROVIDER,MRCompactor.DEFAULT_COMPACTION_RECORD_COUNT_PROVIDER)).newInstance());
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to instantiate record count provider: " + e,e);
  }
}
