{
  Configuration conf=HadoopUtils.getConfFromState(this.jobProps);
  DateTime jobStartTime=new DateTime(DateTimeZone.forID(this.jobProps.getProp(ConfigurationKeys.COMPACTION_TIMEZONE,ConfigurationKeys.DEFAULT_COMPACTION_TIMEZONE)));
  if (this.jobProps.getPropAsBoolean(ConfigurationKeys.COMPACTION_JOB_LATE_DATA_MOVEMENT_TASK,false)) {
    this.copyLateDataFiles(new Path(this.outputPath,"late"),conf);
  }
 else {
    if (this.fs.exists(this.outputPath) && !canOverwriteOutputDir()) {
      LOG.warn(String.format("Output path %s exists. Will not compact %s.",this.outputPath,this.inputPath));
      return null;
    }
    addJars(conf);
    Job job=Job.getInstance(conf);
    this.configureJob(job);
    this.submit(job);
    this.moveTmpPathToOutputPath();
  }
  this.markOutputDirAsCompleted(jobStartTime);
  return null;
}
