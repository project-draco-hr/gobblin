{
  MetricFilter filter=new MetricFilter(){
    @Override public boolean matches(    String name,    Metric metric){
      return !name.equals(MetricContext.GOBBLIN_METRICS_NOTIFICATIONS_TIMER_NAME);
    }
  }
;
  Map<String,Counter> counters=this.context.getCounters(filter);
  Assert.assertEquals(counters.size(),1);
  Assert.assertTrue(counters.containsKey(RECORDS_PROCESSED));
  Map<String,Meter> meters=this.context.getMeters(filter);
  Assert.assertEquals(meters.size(),1);
  Assert.assertTrue(meters.containsKey(RECORD_PROCESS_RATE));
  Map<String,Histogram> histograms=this.context.getHistograms(filter);
  Assert.assertEquals(histograms.size(),1);
  Assert.assertTrue(histograms.containsKey(RECORD_SIZE_DISTRIBUTION));
  Map<String,Timer> timers=this.context.getTimers(filter);
  Assert.assertEquals(timers.size(),1);
  Assert.assertTrue(timers.containsKey(TOTAL_DURATION));
  Map<String,Gauge> gauges=this.context.getGauges(filter);
  Assert.assertEquals(gauges.size(),1);
  Assert.assertTrue(gauges.containsKey(QUEUE_SIZE));
}
