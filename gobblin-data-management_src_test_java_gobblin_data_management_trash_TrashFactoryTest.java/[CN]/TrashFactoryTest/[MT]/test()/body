{
  FileSystem fs=mock(FileSystem.class);
  Path homeDirectory=new Path("/home/directory");
  Path trashDirectory=new Path(homeDirectory,Trash.DEFAULT_TRASH_DIRECTORY);
  Path trashIdentifierFile=new Path(trashDirectory,Trash.TRASH_IDENTIFIER_FILE);
  when(fs.getHomeDirectory()).thenReturn(homeDirectory);
  when(fs.exists(trashDirectory)).thenReturn(true);
  when(fs.exists(trashIdentifierFile)).thenReturn(true);
  when(fs.listStatus(trashDirectory)).thenReturn(new FileStatus[]{});
  when(fs.isDirectory(trashDirectory)).thenReturn(true);
  when(fs.mkdirs(any(Path.class))).thenReturn(true);
  when(fs.mkdirs(any(Path.class),any(FsPermission.class))).thenReturn(true);
  when(fs.createNewFile(any(Path.class))).thenReturn(true);
  when(fs.makeQualified(any(Path.class))).thenAnswer(new Answer<Path>(){
    @Override public Path answer(    InvocationOnMock invocation) throws Throwable {
      return (Path)invocation.getArguments()[0];
    }
  }
);
  Properties properties;
  properties=getBaseProperties(trashDirectory);
  Assert.assertTrue(TrashFactory.createTrash(fs,properties) instanceof Trash);
  Assert.assertTrue(TrashFactory.createProxiedTrash(fs,properties) instanceof ProxiedTrash);
  properties=getBaseProperties(trashDirectory);
  properties.setProperty(TrashFactory.SIMULATE,Boolean.toString(true));
  Assert.assertTrue(TrashFactory.createTrash(fs,properties) instanceof MockTrash);
  Assert.assertTrue(TrashFactory.createProxiedTrash(fs,properties) instanceof MockTrash);
  properties=getBaseProperties(trashDirectory);
  properties.setProperty(TrashFactory.TRASH_TEST,Boolean.toString(true));
  Assert.assertTrue(TrashFactory.createTrash(fs,properties) instanceof TestTrash);
  Assert.assertTrue(TrashFactory.createProxiedTrash(fs,properties) instanceof TestTrash);
  properties=getBaseProperties(trashDirectory);
  properties.setProperty(TrashFactory.SKIP_TRASH,Boolean.toString(true));
  Assert.assertTrue(TrashFactory.createTrash(fs,properties) instanceof ImmediateDeletionTrash);
  Assert.assertTrue(TrashFactory.createProxiedTrash(fs,properties) instanceof ImmediateDeletionTrash);
}
