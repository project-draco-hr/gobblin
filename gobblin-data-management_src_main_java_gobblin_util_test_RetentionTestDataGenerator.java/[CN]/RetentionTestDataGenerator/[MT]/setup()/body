{
  if (this.setupConfig.hasPath(TEST_CURRENT_TIME_KEY)) {
    DateTimeUtils.setCurrentMillisProvider(new FixedThreadLocalMillisProvider(FORMATTER.parseDateTime(setupConfig.getString(TEST_CURRENT_TIME_KEY)).getMillis()));
  }
  List<? extends Config> createConfigs=setupConfig.getConfigList(TEST_DATA_CREATE_KEY);
  Collections.sort(createConfigs,new Comparator<Config>(){
    @Override public int compare(    Config o1,    Config o2){
      return o1.getString(TEST_DATA_PATH_LOCAL_KEY).compareTo(o2.getString(TEST_DATA_PATH_LOCAL_KEY));
    }
  }
);
  for (  Config fileToCreate : createConfigs) {
    Path fullFilePath=new Path(testTempDirPath,PathUtils.withoutLeadingSeparator(new Path(fileToCreate.getString(TEST_DATA_PATH_LOCAL_KEY))));
    if (!this.fs.mkdirs(fullFilePath)) {
      throw new RuntimeException("Failed to create test file " + fullFilePath);
    }
    if (fileToCreate.hasPath(TEST_DATA_MOD_TIME_LOCAL_KEY)) {
      File file=new File(PathUtils.getPathWithoutSchemeAndAuthority(fullFilePath).toString());
      boolean modifiedFile=file.setLastModified(FORMATTER.parseMillis(fileToCreate.getString(TEST_DATA_MOD_TIME_LOCAL_KEY)));
      if (!modifiedFile) {
        throw new IOException(String.format("Unable to set the last modified time for file %s!",file));
      }
    }
  }
}
