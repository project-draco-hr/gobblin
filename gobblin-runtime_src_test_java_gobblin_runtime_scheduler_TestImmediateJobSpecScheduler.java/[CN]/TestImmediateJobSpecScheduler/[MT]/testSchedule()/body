{
  final Logger log=LoggerFactory.getLogger(getClass().getName() + ".testSimpleFlow");
  final Optional<Logger> logOpt=Optional.of(log);
  ImmediateJobSpecScheduler scheduler=new ImmediateJobSpecScheduler(logOpt);
  final CountDownLatch expectedCallCount=new CountDownLatch(3);
  Runnable r=new Runnable(){
    @Override public void run(){
      expectedCallCount.countDown();
    }
  }
;
  JobSpec js1=JobSpec.builder("test.job1").build();
  JobSpec js2=JobSpec.builder("test.job2").build();
  JobSpec js3=JobSpec.builder("test.job3").build();
  scheduler.scheduleJob(js1,r);
  Assert.assertEquals(scheduler.getSchedules().size(),0);
  scheduler.scheduleJob(js2,r);
  Assert.assertEquals(scheduler.getSchedules().size(),0);
  scheduler.scheduleJob(js3,r);
  Assert.assertEquals(scheduler.getSchedules().size(),0);
  Assert.assertTrue(expectedCallCount.await(100,TimeUnit.MILLISECONDS));
}
