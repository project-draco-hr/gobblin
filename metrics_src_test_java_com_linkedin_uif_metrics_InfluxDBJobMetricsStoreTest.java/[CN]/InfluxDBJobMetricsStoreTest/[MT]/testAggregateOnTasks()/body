{
  Object value=this.jobMetricsStore.aggregateOnTask(JOB_NAME_1,TASK_ID_1_0,RECORD_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(((Double)value).longValue(),400l);
  Map<String,Object> values=this.jobMetricsStore.aggregateOnTasks(JOB_NAME_1,JOB_ID_1,RECORD_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(values.size(),2);
  Assert.assertEquals(((Double)values.get(TASK_ID_1_0)).longValue(),400l);
  Assert.assertEquals(((Double)values.get(TASK_ID_1_1)).longValue(),600l);
  value=this.jobMetricsStore.aggregateOnTask(JOB_NAME_1,TASK_ID_1_0,BYTE_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(((Double)value).longValue(),400 * 100l);
  values=this.jobMetricsStore.aggregateOnTasks(JOB_NAME_1,JOB_ID_1,BYTE_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(values.size(),2);
  Assert.assertEquals(((Double)values.get(TASK_ID_1_0)).longValue(),400 * 100l);
  Assert.assertEquals(((Double)values.get(TASK_ID_1_1)).longValue(),600 * 100l);
  value=this.jobMetricsStore.aggregateOnTask(JOB_NAME_2,TASK_ID_2_0,RECORD_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(((Double)value).longValue(),1200l);
  values=this.jobMetricsStore.aggregateOnTasks(JOB_NAME_2,JOB_ID_2,RECORD_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(values.size(),2);
  Assert.assertEquals(((Double)values.get(TASK_ID_2_0)).longValue(),1200l);
  Assert.assertEquals(((Double)values.get(TASK_ID_2_1)).longValue(),800l);
  value=this.jobMetricsStore.aggregateOnTask(JOB_NAME_2,TASK_ID_2_0,BYTE_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(((Double)value).longValue(),1200 * 100l);
  values=this.jobMetricsStore.aggregateOnTasks(JOB_NAME_2,JOB_ID_2,BYTE_COUNTER,MetricNameSuffix.NONE,AggregationFunction.SUM);
  Assert.assertEquals(values.size(),2);
  Assert.assertEquals(((Double)values.get(TASK_ID_2_0)).longValue(),1200 * 100l);
  Assert.assertEquals(((Double)values.get(TASK_ID_2_1)).longValue(),800 * 100l);
}
