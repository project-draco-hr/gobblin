{
  long timestamp=getRecordTimestamp(record);
  GenericRecord partition=new GenericData.Record(this.schema);
  if (!Strings.isNullOrEmpty(this.writerPartitionPrefix)) {
    partition.put(PREFIX,this.writerPartitionPrefix);
  }
  if (!Strings.isNullOrEmpty(this.writerPartitionSuffix)) {
    partition.put(SUFFIX,this.writerPartitionSuffix);
  }
  if (this.timestampToPathFormatter.isPresent()) {
    String partitionedPath=getPartitionedPath(timestamp);
    partition.put(PARTITIONED_PATH,partitionedPath);
  }
 else {
    DateTime dateTime=new DateTime(timestamp,this.timeZone);
switch (this.granularity) {
case MINUTE:
      partition.put(Granularity.MINUTE.toString(),dateTime.getMinuteOfHour());
case HOUR:
    partition.put(Granularity.HOUR.toString(),dateTime.getHourOfDay());
case DAY:
  partition.put(Granularity.DAY.toString(),dateTime.getDayOfMonth());
case MONTH:
partition.put(Granularity.MONTH.toString(),dateTime.getMonthOfYear());
case YEAR:
partition.put(Granularity.YEAR.toString(),dateTime.getYear());
default :
break;
}
}
return partition;
}
