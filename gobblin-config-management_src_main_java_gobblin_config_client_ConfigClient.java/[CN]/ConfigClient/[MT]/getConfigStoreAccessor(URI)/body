{
  URI floorKey=this.configStoreMap.floorKey(uri);
  if (PathUtils.checkDescendant(floorKey,uri)) {
    return this.configStoreMap.get(floorKey);
  }
  ConfigStoreFactory<ConfigStore> csFactory=this.getConfigStoreFactory(uri);
  ConfigStore cs=csFactory.createConfigStore(uri);
  if (!(cs instanceof ConfigStoreWithStableVersion)) {
    if (this.policy == VERSION_STABILITY_POLICY.RAISE_ERROR) {
      throw new Exception(String.format("Try to connect to unstable config store ",cs.getStoreURI()));
    }
  }
  URI key=cs.getStoreURI();
  ConfigStoreAccessor value=new ConfigStoreAccessor(cs,cs.getCurrentVersion());
  if (!(cs instanceof ConfigStoreWithResolution)) {
    SimpleConfigStoreResolver resolver=new SimpleConfigStoreResolver(cs);
    value.resolver=resolver;
  }
  if (!((cs instanceof ConfigStoreWithImportedBy) && (cs instanceof ConfigStoreWithImportedByRecursively))) {
    SimpleImportMappings im=null;
    if (!(cs instanceof ConfigStoreWithResolution)) {
      im=new SimpleImportMappings(value.resolver,value.version);
    }
 else {
      im=new SimpleImportMappings(cs,value.version);
    }
    value.simpleImportMappings=im;
  }
  this.configStoreMap.put(key,value);
  LOG.info(String.format("Created new config store with uri: %s, version: %s",cs.getStoreURI(),cs.getCurrentVersion()));
  return value;
}
