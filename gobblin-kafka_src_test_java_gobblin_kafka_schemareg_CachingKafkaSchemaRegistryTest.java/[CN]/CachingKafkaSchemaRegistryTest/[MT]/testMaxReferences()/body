{
  KafkaSchemaRegistry<Integer,String> baseRegistry=mock(KafkaSchemaRegistry.class);
  String name="test";
  String schema1=new String("schema");
  String schema2=new String("schema");
  String schema3=new String("schema");
  Integer id1=1;
  Integer id2=2;
  Integer id3=3;
  CachingKafkaSchemaRegistry<Integer,String> cachingReg=new CachingKafkaSchemaRegistry<>(baseRegistry,2);
  when(baseRegistry.register(name,schema1)).thenReturn(id1);
  Assert.assertEquals(cachingReg.register(name,schema1),id1);
  when(baseRegistry.register(name,schema2)).thenReturn(id2);
  Assert.assertEquals(cachingReg.register(name,schema2),id2);
  when(baseRegistry.register(name,schema3)).thenReturn(id3);
  try {
    cachingReg.register(name,schema3);
    Assert.fail("Should have thrown an exception");
  }
 catch (  Exception e) {
    log.info(e.getMessage());
  }
}
