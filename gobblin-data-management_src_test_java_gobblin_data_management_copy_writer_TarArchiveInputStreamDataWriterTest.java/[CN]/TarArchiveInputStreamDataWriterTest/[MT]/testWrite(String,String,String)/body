{
  String expectedFileContents="text";
  String fileNameInArchive="text.txt";
  WorkUnitState state=new WorkUnitState();
  state.setProp(ConfigurationKeys.WRITER_STAGING_DIR,new Path(testTempPath,"staging").toString());
  state.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR,new Path(testTempPath,"output").toString());
  state.setProp(ConfigurationKeys.WRITER_FILE_PATH,"writer_file_path_" + RandomStringUtils.randomAlphabetic(5));
  CopyableDatasetMetadata metadata=new CopyableDatasetMetadata(new TestCopyableDataset(new Path("/source")),new Path("/"));
  CopySource.serializeCopyableDataset(state,metadata);
  FileAwareInputStream fileAwareInputStream=getCompressedInputStream(filePath,newFileName);
  CopySource.serializeCopyableFile(state,fileAwareInputStream.getFile());
  TarArchiveInputStreamDataWriter dataWriter=new TarArchiveInputStreamDataWriter(state,1,0);
  dataWriter.write(fileAwareInputStream);
  dataWriter.commit();
  Path unArchivedFilePath=new Path(fileAwareInputStream.getFile().getDestination(),fileNameInArchive);
  Path taskOutputFilePath=new Path(new Path(state.getProp(ConfigurationKeys.WRITER_OUTPUT_DIR),fileAwareInputStream.getFile().getDatasetAndPartition(metadata).identifier()),PathUtils.withoutLeadingSeparator(unArchivedFilePath));
  Assert.assertEquals(IOUtils.toString(new FileInputStream(taskOutputFilePath.toString())).trim(),expectedFileContents);
}
