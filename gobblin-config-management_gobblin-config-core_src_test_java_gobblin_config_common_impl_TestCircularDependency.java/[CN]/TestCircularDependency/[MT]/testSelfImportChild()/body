{
  ConfigKeyPath tag=SingleLinkedListConfigKeyPath.ROOT.createChild("tag");
  ConfigKeyPath highPriorityTag=tag.createChild("highPriorityTag");
  ConfigStore mockConfigStore=mock(ConfigStore.class,Mockito.RETURNS_SMART_NULLS);
  when(mockConfigStore.getCurrentVersion()).thenReturn(version);
  addConfigStoreChildren(mockConfigStore,version,SingleLinkedListConfigKeyPath.ROOT,tag);
  addConfigStoreChildren(mockConfigStore,version,tag,highPriorityTag);
  addConfigStoreImports(mockConfigStore,version,tag,highPriorityTag);
  ConfigStoreBackedTopology csTopology=new ConfigStoreBackedTopology(mockConfigStore,this.version);
  InMemoryTopology inMemory=new InMemoryTopology(csTopology);
  try {
    inMemory.getImportsRecursively(tag);
    Assert.fail("Did not catch expected CircularDependencyException");
  }
 catch (  CircularDependencyException e) {
    Assert.assertTrue(e.getMessage().indexOf("/tag/highPriorityTag") > 0 && e.getMessage().indexOf("/tag ") > 0);
  }
}
