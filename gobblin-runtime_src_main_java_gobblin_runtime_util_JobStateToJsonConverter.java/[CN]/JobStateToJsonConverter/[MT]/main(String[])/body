{
  Option sysConfigOption=Option.builder("sc").argName("system configuration file").desc("Gobblin system configuration file").longOpt("sysconfig").hasArgs().build();
  Option storeUrlOption=Option.builder("u").argName("gobblin state store URL").desc("Gobblin state store root path URL").longOpt("storeurl").hasArgs().required().build();
  Option jobNameOption=Option.builder("n").argName("gobblin job name").desc("Gobblin job name").longOpt("name").hasArgs().required().build();
  Option jobIdOption=Option.builder("i").argName("gobblin job id").desc("Gobblin job id").longOpt("id").hasArgs().build();
  Option convertAllOption=Option.builder("a").desc("Whether to convert all past job states of the given job").longOpt("all").build();
  Option keepConfigOption=Option.builder("kc").desc("Whether to keep all configuration properties").longOpt("keepConfig").build();
  Option outputToFile=Option.builder("t").argName("output file name").desc("Output file name").longOpt("toFile").hasArgs().build();
  Options options=new Options();
  options.addOption(sysConfigOption);
  options.addOption(storeUrlOption);
  options.addOption(jobNameOption);
  options.addOption(jobIdOption);
  options.addOption(convertAllOption);
  options.addOption(keepConfigOption);
  options.addOption(outputToFile);
  CommandLine cmd=null;
  try {
    CommandLineParser parser=new DefaultParser();
    cmd=parser.parse(options,args);
  }
 catch (  ParseException pe) {
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("JobStateToJsonConverter",options);
    System.exit(1);
  }
  Properties sysConfig=new Properties();
  if (cmd.hasOption(sysConfigOption.getLongOpt())) {
    sysConfig=JobConfigurationUtils.fileToProperties(cmd.getOptionValue(sysConfigOption.getLongOpt()));
  }
  JobStateToJsonConverter converter=new JobStateToJsonConverter(sysConfig,cmd.getOptionValue('u'),cmd.hasOption("kc"));
  StringWriter stringWriter=new StringWriter();
  if (cmd.hasOption('i')) {
    converter.convert(cmd.getOptionValue('n'),cmd.getOptionValue('i'),stringWriter);
  }
 else {
    if (cmd.hasOption('a')) {
      converter.convertAll(cmd.getOptionValue('n'),stringWriter);
    }
 else {
      converter.convert(cmd.getOptionValue('n'),stringWriter);
    }
  }
  if (cmd.hasOption('t')) {
    Closer closer=Closer.create();
    try {
      FileOutputStream fileOutputStream=closer.register(new FileOutputStream(cmd.getOptionValue('t')));
      OutputStreamWriter outputStreamWriter=closer.register(new OutputStreamWriter(fileOutputStream,ConfigurationKeys.DEFAULT_CHARSET_ENCODING));
      BufferedWriter bufferedWriter=closer.register(new BufferedWriter(outputStreamWriter));
      bufferedWriter.write(stringWriter.toString());
    }
 catch (    Throwable t) {
      throw closer.rethrow(t);
    }
 finally {
      closer.close();
    }
  }
 else {
    System.out.println(stringWriter.toString());
  }
}
