{
  super(state,type);
  this.instrumentationEnabled=GobblinMetrics.isEnabled(state);
  this.closer=Closer.create();
  if (isInstrumentationEnabled()) {
    this.metricContext=Optional.fromNullable(closer.register(Instrumented.getMetricContext(state,this.getClass())));
  }
 else {
    this.metricContext=Optional.absent();
  }
  this.recordsMeter=Instrumented.meter(this.metricContext,MetricNames.RowLevelPolicyMetrics.RECORDS_IN_METER);
  this.passedRecordsMeter=Instrumented.meter(this.metricContext,MetricNames.RowLevelPolicyMetrics.RECORDS_PASSED_METER);
  this.failedRecordsMeter=Instrumented.meter(this.metricContext,MetricNames.RowLevelPolicyMetrics.RECORDS_FAILED_METER);
  this.policyTimer=Instrumented.timer(this.metricContext,MetricNames.RowLevelPolicyMetrics.CHECK_TIMER);
}
