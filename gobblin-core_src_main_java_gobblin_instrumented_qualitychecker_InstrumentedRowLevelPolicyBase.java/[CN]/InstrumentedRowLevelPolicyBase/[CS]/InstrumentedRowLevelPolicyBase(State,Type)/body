{
  super(state,type);
  this.closer=Closer.create();
  this.metricContext=closer.register(Instrumented.getMetricContext(state,this.getClass()));
  this.recordsMeter=this.metricContext.contextAwareMeter("gobblin.qualitychecker.records.in");
  this.passedRecordsMeter=this.metricContext.contextAwareMeter("gobblin.qualitychecker.records.passed");
  this.failedRecordsMeter=this.metricContext.contextAwareMeter("gobblin.qualitychecker.records.failed");
  this.policyTimer=this.metricContext.contextAwareTimer("gobblin.qualitychecker.policy.timer");
}
