{
  super(state,type);
  this.closer=Closer.create();
  this.metricContext=closer.register(Instrumented.getMetricContext(state,this.getClass()));
  this.recordsMeter=this.metricContext.contextAwareMeter(MetricNames.RowLevelPolicy.RECORDS_IN);
  this.passedRecordsMeter=this.metricContext.contextAwareMeter(MetricNames.RowLevelPolicy.RECORDS_PASSED);
  this.failedRecordsMeter=this.metricContext.contextAwareMeter(MetricNames.RowLevelPolicy.RECORDS_FAILED);
  this.policyTimer=this.metricContext.contextAwareTimer(MetricNames.RowLevelPolicy.CHECK_TIME);
}
