{
  super(state,type);
  this.instrumentationEnabled=GobblinMetrics.isEnabled(state);
  this.closer=Closer.create();
  this.metricContext=closer.register(Instrumented.getMetricContext(state,classTag.or(this.getClass())));
  if (isInstrumentationEnabled()) {
    this.recordsMeter=Optional.of(this.metricContext.meter(MetricNames.RowLevelPolicyMetrics.RECORDS_IN_METER));
    this.passedRecordsMeter=Optional.of(this.metricContext.meter(MetricNames.RowLevelPolicyMetrics.RECORDS_PASSED_METER));
    this.failedRecordsMeter=Optional.of(this.metricContext.meter(MetricNames.RowLevelPolicyMetrics.RECORDS_FAILED_METER));
    this.policyTimer=Optional.of(this.metricContext.timer(MetricNames.RowLevelPolicyMetrics.CHECK_TIMER));
  }
 else {
    this.recordsMeter=Optional.absent();
    this.passedRecordsMeter=Optional.absent();
    this.failedRecordsMeter=Optional.absent();
    this.policyTimer=Optional.absent();
  }
}
