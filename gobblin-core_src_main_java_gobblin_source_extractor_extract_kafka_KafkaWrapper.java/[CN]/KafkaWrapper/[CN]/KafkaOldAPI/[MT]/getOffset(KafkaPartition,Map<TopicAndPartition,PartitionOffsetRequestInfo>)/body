{
  SimpleConsumer consumer=this.getSimpleConsumer(partition.getLeader().getHostAndPort());
  for (int i=0; i < NUM_TRIES_FETCH_OFFSET; i++) {
    try {
      OffsetResponse offsetResponse=consumer.getOffsetsBefore(new OffsetRequest(offsetRequestInfo,kafka.api.OffsetRequest.CurrentVersion(),DEFAULT_KAFKA_CLIENT_NAME));
      if (offsetResponse.hasError()) {
        throw new RuntimeException("offsetReponse has error: " + offsetResponse.errorCode(partition.getTopicName(),partition.getId()));
      }
      return offsetResponse.offsets(partition.getTopicName(),partition.getId())[0];
    }
 catch (    Exception e) {
      LOG.warn(String.format("Fetching offset for partition %s has failed %d time(s). Reason: %s",partition,i + 1,e));
      if (i < NUM_TRIES_FETCH_OFFSET - 1) {
        try {
          Thread.sleep((long)((i + Math.random()) * 1000));
        }
 catch (        InterruptedException e2) {
          LOG.error("Caught interrupted exception between retries of getting latest offsets. " + e2);
        }
      }
    }
  }
  throw new KafkaOffsetRetrievalFailureException(String.format("Fetching offset for partition %s has failed.",partition));
}
