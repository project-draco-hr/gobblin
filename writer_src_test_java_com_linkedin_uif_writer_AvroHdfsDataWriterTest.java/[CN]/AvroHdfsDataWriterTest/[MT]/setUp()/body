{
  File stagingDir=new File(TestConstants.TEST_STAGING_DIR);
  File outputDir=new File(TestConstants.TEST_OUTPUT_DIR);
  if (!stagingDir.exists()) {
    stagingDir.mkdirs();
  }
  if (!outputDir.exists()) {
    outputDir.mkdirs();
  }
  Properties properties=new Properties();
  properties.setProperty(ConfigurationKeys.BUFFER_SIZE_KEY,ConfigurationKeys.DEFAULT_BUFFER_SIZE);
  properties.setProperty(ConfigurationKeys.FILE_SYSTEM_URI_KEY,TestConstants.TEST_FS_URI);
  properties.setProperty(ConfigurationKeys.STAGING_DIR_KEY,TestConstants.TEST_STAGING_DIR);
  properties.setProperty(ConfigurationKeys.OUTPUT_DIR_KEY,TestConstants.TEST_OUTPUT_DIR);
  properties.setProperty(ConfigurationKeys.FILE_NAME_KEY,TestConstants.TEST_FILE_NAME);
  SchemaConverter<String,Schema> schemaConverter=new TestSchemaConverter();
  this.schema=schemaConverter.convert(TestConstants.AVRO_SCHEMA);
  this.writer=new DataWriterBuilderFactory().newDataWriterBuilder(WriterOutputFormat.AVRO).writeTo(Destination.of(Destination.DestinationType.HDFS,properties)).writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).useDataConverter(new TestDataConverter(schemaConverter.convert(TestConstants.AVRO_SCHEMA))).useSchemaConverter(new TestSchemaConverter()).withSourceSchema(TestConstants.AVRO_SCHEMA).build();
}
