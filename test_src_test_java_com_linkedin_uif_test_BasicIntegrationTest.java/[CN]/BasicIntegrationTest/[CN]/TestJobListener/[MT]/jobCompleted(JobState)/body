{
  try {
    Assert.assertEquals(jobState.getState(),JobState.RunningState.COMMITTED);
    Assert.assertEquals(jobState.getCompletedTasks(),2);
    for (    TaskState taskState : jobState.getTaskStates()) {
      File sourceFile=new File(taskState.getProp(SOURCE_FILE_KEY));
      Extract e=taskState.getExtract();
      File targetFile=new File(jobState.getProp(ConfigurationKeys.DATA_PUBLISHER_FINAL_DIR) + "/" + e.getNamespace().replaceAll("\\.","/")+ "/"+ e.getTable()+ "/"+ e.getExtractId()+ "_"+ (e.getIsFull() ? "FULL" : "APPEND"),jobState.getProp(ConfigurationKeys.WRITER_FILE_NAME) + "." + taskState.getId()+ "."+ TestConstants.TEST_WRITER_FILE_EXTENSION);
      Assert.assertEquals(taskState.getWorkingState(),WorkUnitState.WorkingState.COMMITTED);
      try {
        Assert.assertEquals(sourceFile.length(),targetFile.length());
        Assert.assertFalse(Files.equal(sourceFile,targetFile));
      }
 catch (      Exception ex) {
        Assert.fail();
      }
      long records=Metrics.getCounter(Metrics.metricName("task",taskState.getTaskId(),"records")).getCount();
      Assert.assertEquals(records,1000);
    }
    long records=Metrics.getCounter(Metrics.metricName("job",jobState.getJobId(),"records")).getCount();
    Assert.assertEquals(records,2000);
  }
  finally {
    latch.countDown();
  }
}
