{
  this.jobState=jobState;
  this.countDownLatch=new CountDownLatch(workUnits.size());
  String jobId=jobProps.getProperty(ConfigurationKeys.JOB_ID_KEY);
  for (  WorkUnit workUnit : workUnits) {
    String taskId=workUnit.getProp(ConfigurationKeys.TASK_ID_KEY);
    WorkUnitState workUnitState=new WorkUnitState(workUnit);
    workUnitState.setId(taskId);
    workUnitState.setProp(ConfigurationKeys.JOB_ID_KEY,jobId);
    workUnitState.setProp(ConfigurationKeys.TASK_ID_KEY,taskId);
    this.workUnitManager.addWorkUnit(workUnitState);
  }
  LOG.info(String.format("Waiting for job %s to complete...",jobId));
  this.countDownLatch.await();
  if (isCancelled) {
    jobState.setState(JobState.RunningState.CANCELLED);
  }
 else   if (this.jobState.getState() == JobState.RunningState.RUNNING) {
    this.jobState.setState(JobState.RunningState.SUCCESSFUL);
  }
  this.serviceManager.stopAsync().awaitStopped(5,TimeUnit.SECONDS);
}
