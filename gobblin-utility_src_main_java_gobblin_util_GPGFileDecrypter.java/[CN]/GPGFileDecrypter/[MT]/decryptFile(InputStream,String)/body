{
  if (Security.getProvider(BouncyCastleProvider.PROVIDER_NAME) == null) {
    Security.addProvider(new BouncyCastleProvider());
  }
  in=PGPUtil.getDecoderStream(in);
  JcaPGPObjectFactory pgpF=new JcaPGPObjectFactory(in);
  PGPEncryptedDataList enc;
  Object o=pgpF.nextObject();
  if (o instanceof PGPEncryptedDataList) {
    enc=(PGPEncryptedDataList)o;
  }
 else {
    enc=(PGPEncryptedDataList)pgpF.nextObject();
  }
  PGPPBEEncryptedData pbe=(PGPPBEEncryptedData)enc.get(0);
  InputStream clear=pbe.getDataStream(new JcePBEDataDecryptorFactoryBuilder(new JcaPGPDigestCalculatorProviderBuilder().setProvider("BC").build()).setProvider("BC").build(passPhrase.toCharArray()));
  JcaPGPObjectFactory pgpFact=new JcaPGPObjectFactory(clear);
  o=pgpFact.nextObject();
  if (o instanceof PGPCompressedData) {
    PGPCompressedData cData=(PGPCompressedData)o;
    pgpFact=new JcaPGPObjectFactory(cData.getDataStream());
    o=pgpFact.nextObject();
  }
  PGPLiteralData ld=(PGPLiteralData)o;
  return ld.getInputStream();
}
