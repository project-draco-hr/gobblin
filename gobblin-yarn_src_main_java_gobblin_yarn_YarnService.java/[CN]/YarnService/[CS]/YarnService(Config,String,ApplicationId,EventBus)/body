{
  this.applicationName=applicationName;
  this.applicationId=applicationId;
  this.config=config;
  this.yarnConfiguration=new YarnConfiguration();
  this.amrmClientAsync=AMRMClientAsync.createAMRMClientAsync(1000,new AMRMClientCallbackHandler());
  this.amrmClientAsync.init(this.yarnConfiguration);
  this.nmClientAsync=NMClientAsync.createNMClientAsync(new NMClientCallbackHandler());
  this.nmClientAsync.init(this.yarnConfiguration);
  this.containerLaunchExecutor=Executors.newFixedThreadPool(10,ExecutorsUtils.newThreadFactory(Optional.of(LOGGER),Optional.of("ContainerLaunchExecutor")));
  this.fs=FileSystem.get(new Configuration());
  this.eventBus=eventBus;
  this.initialContainers=config.hasPath(ConfigurationConstants.INITIAL_CONTAINERS_KEY) ? config.getInt(ConfigurationConstants.INITIAL_CONTAINERS_KEY) : ConfigurationConstants.DEFAULT_INITIAL_CONTAINERS;
  this.requestedContainerMemoryMbs=config.hasPath(ConfigurationConstants.CONTAINER_MEMORY_MBS_KEY) ? config.getInt(ConfigurationConstants.CONTAINER_MEMORY_MBS_KEY) : ConfigurationConstants.DEFAULT_CONTAINER_MEMORY_MBS;
  this.requestedContainerCores=config.hasPath(ConfigurationConstants.CONTAINER_CORES_KEY) ? config.getInt(ConfigurationConstants.CONTAINER_CORES_KEY) : ConfigurationConstants.DEFAULT_CONTAINER_CORES;
  this.tokens=getSecurityTokens();
  this.eventBus.register(this);
}
