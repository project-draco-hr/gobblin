{
  this.applicationName=applicationName;
  this.applicationId=applicationId;
  this.config=config;
  this.eventBus=eventBus;
  this.gobblinMetrics=config.getBoolean(ConfigurationKeys.METRICS_ENABLED_KEY) ? Optional.of(buildGobblinMetrics()) : Optional.<GobblinMetrics>absent();
  this.eventSubmitter=config.getBoolean(ConfigurationKeys.METRICS_ENABLED_KEY) ? Optional.of(buildEventSubmitter()) : Optional.<EventSubmitter>absent();
  this.yarnConfiguration=yarnConfiguration;
  this.fs=fs;
  this.amrmClientAsync=closer.register(AMRMClientAsync.createAMRMClientAsync(1000,new AMRMClientCallbackHandler()));
  this.amrmClientAsync.init(this.yarnConfiguration);
  this.nmClientAsync=closer.register(NMClientAsync.createNMClientAsync(new NMClientCallbackHandler()));
  this.nmClientAsync.init(this.yarnConfiguration);
  this.initialContainers=config.getInt(GobblinYarnConfigurationKeys.INITIAL_CONTAINERS_KEY);
  this.requestedContainerMemoryMbs=config.getInt(GobblinYarnConfigurationKeys.CONTAINER_MEMORY_MBS_KEY);
  this.requestedContainerCores=config.getInt(GobblinYarnConfigurationKeys.CONTAINER_CORES_KEY);
  this.containerHostAffinityEnabled=config.getBoolean(GobblinYarnConfigurationKeys.CONTAINER_HOST_AFFINITY_ENABLED);
  this.helixInstanceMaxRetries=config.getInt(GobblinYarnConfigurationKeys.HELIX_INSTANCE_MAX_RETRIES);
  this.containerJvmArgs=config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JVM_ARGS_KEY) ? Optional.of(config.getString(GobblinYarnConfigurationKeys.CONTAINER_JVM_ARGS_KEY)) : Optional.<String>absent();
  this.containerLaunchExecutor=Executors.newFixedThreadPool(10,ExecutorsUtils.newThreadFactory(Optional.of(LOGGER),Optional.of("ContainerLaunchExecutor")));
  this.tokens=getSecurityTokens();
}
