{
  LOGGER.info("Stopping the YarnService");
  try {
    ExecutorsUtils.shutdownExecutorService(this.containerLaunchExecutor,Optional.of(LOGGER));
    for (    Container container : this.containerMap.values()) {
      LOGGER.info("Stopping container " + container.getId());
      this.nmClientAsync.stopContainerAsync(container.getId(),container.getNodeId());
    }
synchronized (this.allContainersStopped) {
      this.allContainersStopped.wait();
      LOGGER.info("All of the containers have been stopped");
    }
    this.amrmClientAsync.unregisterApplicationMaster(FinalApplicationStatus.SUCCEEDED,null,null);
  }
 catch (  IOException ioe) {
    LOGGER.error("Failed to unregister the ApplicationMaster",ioe);
  }
catch (  YarnException ye) {
    LOGGER.error("Failed to unregister the ApplicationMaster",ye);
  }
catch (  Exception e) {
    LOGGER.error("Failed to unregister the ApplicationMaster",e);
  }
 finally {
    this.closer.close();
  }
}
