{
  super(builder,config);
  SchemaVersionWriter versionWriter;
  if (config.hasPath(SCHEMA_VERSION_WRITER_TYPE)) {
    try {
      ClassAliasResolver<SchemaVersionWriter> resolver=new ClassAliasResolver<>(SchemaVersionWriter.class);
      Class<? extends SchemaVersionWriter> klazz=resolver.resolveClass(config.getString(SCHEMA_VERSION_WRITER_TYPE));
      versionWriter=klazz.newInstance();
    }
 catch (    ReflectiveOperationException roe) {
      throw new IOException("Could not instantiate version writer.",roe);
    }
  }
 else {
    versionWriter=new FixedSchemaVersionWriter();
  }
  log.info("Schema version writer: " + versionWriter.getClass().getName());
  this.serializer=this.closer.register(createSerializer(versionWriter));
  if (builder.kafkaPusher.isPresent()) {
    this.kafkaPusher=builder.kafkaPusher.get();
  }
 else {
    this.kafkaPusher=this.closer.register(new KafkaPusher(builder.brokers,builder.topic));
  }
}
