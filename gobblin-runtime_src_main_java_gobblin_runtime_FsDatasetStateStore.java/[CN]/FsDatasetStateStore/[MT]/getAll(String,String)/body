{
  List<JobState.DatasetState> states=Lists.newArrayList();
  Path tablePath=new Path(new Path(this.storeRootDir,storeName),tableName);
  if (!this.fs.exists(tablePath)) {
    return states;
  }
  Closer closer=Closer.create();
  try {
    @SuppressWarnings("deprecation") SequenceFile.Reader reader=closer.register(new SequenceFile.Reader(this.fs,tablePath,this.conf));
    Writable writable=reader.getValueClass() == JobState.class ? new JobState() : new JobState.DatasetState();
    try {
      Text key=new Text();
      while (reader.next(key,writable)) {
        if (writable instanceof JobState.DatasetState) {
          states.add((JobState.DatasetState)writable);
          writable=new JobState.DatasetState();
        }
 else {
          states.add(((JobState)writable).newDatasetState(true));
          writable=new JobState();
        }
      }
    }
 catch (    Exception e) {
      throw new IOException(e);
    }
  }
 catch (  Throwable t) {
    throw closer.rethrow(t);
  }
 finally {
    closer.close();
  }
  return states;
}
