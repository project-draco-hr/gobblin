{
  List<String> patterns=Arrays.asList(this.inputPatterns.split(","));
  int patternFailCount=0;
  Object formattedDate=null;
  for (  String pattern : patterns) {
    DateTimeFormatter dtf=DateTimeFormat.forPattern(pattern).withZone(this.timeZone);
    try {
      formattedDate=dtf.parseDateTime(value.getAsString()).withZone(DateTimeZone.forID("UTC")).getMillis();
      if (Boolean.valueOf(this.state.getProp(ConfigurationKeys.CONVERTER_IS_EPOCH_TIME_IN_SECONDS))) {
        formattedDate=(Long)formattedDate / 1000;
      }
      break;
    }
 catch (    Exception e) {
      patternFailCount++;
    }
  }
  if (patternFailCount == patterns.size()) {
    throw new RuntimeException("Failed to parse the date");
  }
  return formattedDate;
}
