{
  startServer();
  this.topic=topic;
  AdminUtils.createTopic(zkClient,topic,1,1,new Properties());
  List<KafkaServer> servers=new ArrayList<KafkaServer>();
  servers.add(kafkaServer);
  TestUtils.waitUntilMetadataIsPropagated(scala.collection.JavaConversions.asScalaBuffer(servers),topic,0,5000);
  Properties consumeProps=new Properties();
  consumeProps.put("zookeeper.connect",zkConnect);
  consumeProps.put("group.id","testConsumer");
  consumeProps.put("zookeeper.session.timeout.ms","400");
  consumeProps.put("zookeeper.sync.time.ms","200");
  consumeProps.put("auto.commit.interval.ms","1000");
  consumeProps.put("consumer.timeout.ms","200");
  consumer=Consumer.createJavaConsumerConnector(new ConsumerConfig(consumeProps));
  Map<String,Integer> topicCountMap=new HashMap<String,Integer>();
  topicCountMap.put(this.topic,1);
  Map<String,List<KafkaStream<byte[],byte[]>>> consumerMap=consumer.createMessageStreams(topicCountMap);
  List<KafkaStream<byte[],byte[]>> streams=consumerMap.get(this.topic);
  stream=streams.get(0);
  iterator=stream.iterator();
}
