{
  Preconditions.checkArgument(props.containsKey(DELETE_SETS_COMBINE_OPERATION),"Combine operation not specified.");
  ImmutableList.Builder<RetentionPolicy<T>> builder=ImmutableList.builder();
  for (  String property : props.stringPropertyNames()) {
    if (property.startsWith(RETENTION_POLICIES_PREFIX)) {
      try {
        builder.add((RetentionPolicy<T>)ConstructorUtils.invokeConstructor(Class.forName(props.getProperty(property)),props));
      }
 catch (      NoSuchMethodException|IllegalAccessException|InvocationTargetException|InstantiationException|ClassNotFoundException e) {
        throw new IllegalArgumentException(e);
      }
    }
  }
  this.retentionPolicies=builder.build();
  if (this.retentionPolicies.size() == 0) {
    throw new IOException("No retention policies specified for " + CombineRetentionPolicy.class.getCanonicalName());
  }
  this.combineOperation=DeletableCombineOperation.valueOf(props.getProperty(DELETE_SETS_COMBINE_OPERATION).toUpperCase());
}
