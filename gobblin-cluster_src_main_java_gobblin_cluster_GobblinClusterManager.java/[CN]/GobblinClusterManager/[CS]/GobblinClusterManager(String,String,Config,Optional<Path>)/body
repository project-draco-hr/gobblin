{
  Properties properties=ConfigUtils.configToProperties(config);
  if (!properties.contains(ServiceBasedAppLauncher.APP_STOP_TIME_SECONDS)) {
    properties.setProperty(ServiceBasedAppLauncher.APP_STOP_TIME_SECONDS,Long.toString(300));
  }
  this.applicationId=applicationId;
  this.applicationLauncher=new ServiceBasedAppLauncher(properties,clusterName);
  String zkConnectionString=config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY);
  LOGGER.info("Using ZooKeeper connection string: " + zkConnectionString);
  this.helixManager=buildHelixManager(config,zkConnectionString);
  this.fs=buildFileSystem(config);
  this.appWorkDir=appWorkDirOptional.isPresent() ? appWorkDirOptional.get() : GobblinClusterUtils.getAppWorkDirPath(this.fs,clusterName,applicationId);
  SchedulerService schedulerService=new SchedulerService(properties);
  this.applicationLauncher.addService(schedulerService);
  this.applicationLauncher.addService(buildGobblinHelixJobScheduler(config,this.appWorkDir,getMetadataTags(clusterName,applicationId),schedulerService));
  this.applicationLauncher.addService(buildJobConfigurationManager(config));
}
