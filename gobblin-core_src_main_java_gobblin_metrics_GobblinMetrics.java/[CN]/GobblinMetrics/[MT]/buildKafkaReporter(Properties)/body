{
  if (!Boolean.valueOf(properties.getProperty(ConfigurationKeys.METRICS_REPORTING_KAFKA_ENABLED_KEY,ConfigurationKeys.DEFAULT_METRICS_REPORTING_KAFKA_ENABLED))) {
    LOGGER.info("Not reporting metrics to Kafka");
    return;
  }
  try {
    Preconditions.checkArgument(properties.containsKey(ConfigurationKeys.METRICS_KAFKA_BROKERS),"Kafka metrics brokers missing.");
    Preconditions.checkArgument(properties.containsKey(ConfigurationKeys.METRICS_KAFKA_TOPIC),"Kafka metrics topic missing.");
  }
 catch (  IllegalArgumentException exception) {
    LOGGER.error("Wrong arguments for Kafka metrics.",exception);
    return;
  }
  String brokers=properties.getProperty(ConfigurationKeys.METRICS_KAFKA_BROKERS);
  String topic=properties.getProperty(ConfigurationKeys.METRICS_KAFKA_TOPIC);
  String reportingFormat=properties.getProperty(ConfigurationKeys.METRICS_REPORTING_KAFKA_FORMAT,ConfigurationKeys.DEFAULT_METRICS_REPORTING_KAFKA_FORMAT);
  KafkaReportingFormats formatEnum;
  try {
    formatEnum=KafkaReportingFormats.valueOf(reportingFormat.toUpperCase());
  }
 catch (  IllegalArgumentException exception) {
    LOGGER.warn("Kafka metrics reporting format " + reportingFormat + " not recognized. Will report in json format.",exception);
    formatEnum=KafkaReportingFormats.JSON;
  }
  this.kafkaReporter=Optional.of(formatEnum.reporterBuilder(this.metricContext).build(brokers,topic));
}
