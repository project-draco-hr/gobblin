{
  log.debug("Commit called, will wait for commitTimeout : " + commitTimeoutInNanos / MILLIS_TO_NANOS + "ms");
  long commitStartTime=System.nanoTime();
  while (((System.nanoTime() - commitStartTime) < commitTimeoutInNanos) && (recordsProduced.getCount() != (recordsWritten.getCount() + recordsFailed.getCount()))) {
    log.debug("Commit waiting... records produced: " + recordsProduced.getCount() + " written: "+ recordsWritten.getCount()+ " failed: "+ recordsFailed.getCount());
    try {
      Thread.sleep(commitStepWaitTimeMillis);
    }
 catch (    InterruptedException e) {
      throw new IOException("Interrupted while waiting for commit to complete",e);
    }
  }
  log.debug("Commit done waiting");
  long recordsProducedFinal=recordsProduced.getCount();
  long recordsWrittenFinal=recordsWritten.getCount();
  long recordsFailedFinal=recordsFailed.getCount();
  long unacknowledgedWrites=recordsProducedFinal - recordsWrittenFinal - recordsFailedFinal;
  long totalFailures=unacknowledgedWrites + recordsFailedFinal;
  if (unacknowledgedWrites > 0) {
    log.warn("Timeout waiting for all writes to be acknowledged. Missing " + unacknowledgedWrites + " responses out of "+ recordsProducedFinal);
  }
  if (totalFailures > 0 && recordsProducedFinal > 0) {
    String message="Commit failed to write " + totalFailures + " records ("+ recordsFailedFinal+ " failed, "+ unacknowledgedWrites+ " unacknowledged) out of "+ recordsProducedFinal+ " produced.";
    double failureRatio=(double)totalFailures / (double)recordsProducedFinal;
    if (failureRatio > failureAllowance) {
      message+="\nAborting because this is greater than the failureAllowance percentage: " + failureAllowance * 100.0;
      log.error(message);
      throw new IOException(message);
    }
 else {
      message+="\nCommitting because failureRatio: " + failureRatio + " is less than the failureAllowance percentage: "+ (failureAllowance * 100.0);
      log.warn(message);
    }
  }
  log.info("Successfully committed " + recordsWrittenFinal + " records.");
}
