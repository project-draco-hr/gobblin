{
  Preconditions.checkNotNull(destination);
  Preconditions.checkNotNull(writerId);
  Preconditions.checkNotNull(schema);
  Preconditions.checkNotNull(writerOutputFormat);
  Preconditions.checkNotNull(numBranches);
  Preconditions.checkNotNull(branch);
  Preconditions.checkNotNull(destination.getProperties());
  this.destination=destination;
  this.writerId=writerId;
  this.schema=schema;
  this.writerOutputFormat=writerOutputFormat;
  this.numBranches=numBranches;
  this.branch=branch;
  this.properties=destination.getProperties();
  this.datasetName=WriterUtils.getWriterFilePath(this.properties,numBranches,branch);
  this.partitionLevel=this.properties.getProp(getWriterPartitionLevel(),ConfigurationKeys.DEFAULT_WRITER_PARTITION_LEVEL);
  this.timeZone=DateTimeZone.forID(this.properties.getProp(ConfigurationKeys.WRITER_PARTITION_TIMEZONE,ConfigurationKeys.DEFAULT_WRITER_PARTITION_TIMEZONE));
  this.timestampToPathFormatter=DateTimeFormat.forPattern(this.properties.getProp(getWriterPartitionPattern(),ConfigurationKeys.DEFAULT_WRITER_PARTITION_PATTERN)).withZone(this.timeZone);
  this.partitionColumns=getWriterPartitionColumns();
  this.earliestAllowedTimestamp=getEarliestAllowedTimestamp();
}
