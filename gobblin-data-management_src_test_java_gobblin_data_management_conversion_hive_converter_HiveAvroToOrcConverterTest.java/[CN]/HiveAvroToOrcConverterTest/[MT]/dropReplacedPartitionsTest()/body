{
  Table table=ConvertibleHiveDatasetTest.getTestTable("dbName","tableName");
  table.setTableType("VIRTUAL_VIEW");
  table.setPartitionKeys(ImmutableList.of(new FieldSchema("year","string",""),new FieldSchema("month","string","")));
  Partition part=new Partition();
  part.setParameters(ImmutableMap.of("gobblin.replaced.partitions","2015,12|2016,01"));
  SchemaAwareHiveTable hiveTable=new SchemaAwareHiveTable(table,null);
  SchemaAwareHivePartition partition=new SchemaAwareHivePartition(table,part,null);
  QueryBasedHiveConversionEntity conversionEntity=new QueryBasedHiveConversionEntity(null,hiveTable,Optional.of(partition));
  List<ImmutableMap<String,String>> expected=ImmutableList.of(ImmutableMap.of("year","2015","month","12"),ImmutableMap.of("year","2016","month","01"));
  Assert.assertEquals(AbstractAvroToOrcConverter.getDropPartitionsDDLInfo(conversionEntity),expected);
  Partition replacedSelf=new Partition();
  replacedSelf.setParameters(ImmutableMap.of("gobblin.replaced.partitions","2015,12|2016,01|2016,02"));
  replacedSelf.setValues(ImmutableList.of("2016","02"));
  conversionEntity=new QueryBasedHiveConversionEntity(null,hiveTable,Optional.of(new SchemaAwareHivePartition(table,replacedSelf,null)));
  Assert.assertEquals(AbstractAvroToOrcConverter.getDropPartitionsDDLInfo(conversionEntity),expected);
}
