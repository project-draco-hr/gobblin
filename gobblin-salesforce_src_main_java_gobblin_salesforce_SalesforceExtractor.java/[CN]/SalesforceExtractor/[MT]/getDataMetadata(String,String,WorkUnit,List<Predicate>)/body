{
  log.debug("Build url to retrieve data records");
  String query=this.updatedQuery;
  String url=null;
  try {
    if (this.getNextUrl() != null && this.pullStatus == true) {
      url=this.getNextUrl();
    }
 else {
      if (isNullPredicate(predicateList)) {
        log.info("QUERY:" + query);
        return constructGetCommand(this.sfConnector.getFullUri(getSoqlUrl(query)));
      }
      String limitString=getLimitFromInputQuery(query);
      query=query.replace(limitString,"");
      Iterator<Predicate> i=predicateList.listIterator();
      while (i.hasNext()) {
        Predicate predicate=i.next();
        query=SqlQueryUtils.addPredicate(query,predicate.getCondition());
      }
      if (Boolean.valueOf(this.workUnitState.getProp(ConfigurationKeys.SOURCE_QUERYBASED_IS_SPECIFIC_API_ACTIVE))) {
        query=SqlQueryUtils.addPredicate(query,"IsDeleted = true");
      }
      query=query + limitString;
      log.info("QUERY: " + query);
      url=this.sfConnector.getFullUri(getSoqlUrl(query));
    }
    return constructGetCommand(url);
  }
 catch (  Exception e) {
    throw new DataRecordException("Failed to get salesforce url for data records; error - " + e.getMessage(),e);
  }
}
