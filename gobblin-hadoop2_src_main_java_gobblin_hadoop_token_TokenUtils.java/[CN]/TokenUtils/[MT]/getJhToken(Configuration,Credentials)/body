{
  YarnRPC rpc=YarnRPC.create(conf);
  final String serviceAddr=conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);
  LOG.debug("Connecting to HistoryServer at: " + serviceAddr);
  HSClientProtocol hsProxy=(HSClientProtocol)rpc.getProxy(HSClientProtocol.class,NetUtils.createSocketAddr(serviceAddr),conf);
  LOG.info("Pre-fetching JH token from job history server");
  Token<?> jhToken=null;
  try {
    jhToken=getDelegationTokenFromHS(hsProxy,conf);
  }
 catch (  Exception exc) {
    throw new IOException("Failed to fetch JH token.",exc);
  }
  if (jhToken == null) {
    LOG.error("getDelegationTokenFromHS() returned null");
    throw new IOException("Unable to fetch JH token.");
  }
  LOG.info("Created JH token: " + jhToken.toString());
  LOG.info("Token kind: " + jhToken.getKind());
  LOG.info("Token id: " + Arrays.toString(jhToken.getIdentifier()));
  LOG.info("Token service: " + jhToken.getService());
  cred.addToken(jhToken.getService(),jhToken);
}
