{
  List<CommitStepCopyEntity> steps=Lists.newArrayList();
  for (  WorkUnitState wus : workUnits) {
    if (baseClass.isAssignableFrom(CopySource.getCopyEntityClass(wus))) {
      CommitStepCopyEntity step=(CommitStepCopyEntity)CopySource.deserializeCopyEntity(wus);
      steps.add(step);
    }
  }
  Comparator<CommitStepCopyEntity> commitStepSorter=new Comparator<CommitStepCopyEntity>(){
    @Override public int compare(    CommitStepCopyEntity o1,    CommitStepCopyEntity o2){
      return Integer.compare(o1.getPriority(),o2.getPriority());
    }
  }
;
  Collections.sort(steps,commitStepSorter);
  List<CommitStep> sequence=Lists.newArrayList();
  for (  CommitStepCopyEntity entity : steps) {
    sequence.add(entity.getStep());
  }
  return sequence;
}
