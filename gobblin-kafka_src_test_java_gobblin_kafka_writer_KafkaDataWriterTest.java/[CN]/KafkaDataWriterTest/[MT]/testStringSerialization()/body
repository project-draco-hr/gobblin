{
  String topic="testStringSerialization";
  _kafkaTestHelper.provisionTopic(topic);
  Properties props=new Properties();
  props.setProperty(KafkaWriterConfigurationKeys.KAFKA_TOPIC,topic);
  props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + "bootstrap.servers","localhost:" + _kafkaTestHelper.getKafkaServerPort());
  props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + "value.serializer","org.apache.kafka.common.serialization.StringSerializer");
  KafkaDataWriter<String> kafkaWriter=new KafkaDataWriter<String>(props);
  String messageString="foobar";
  try {
    kafkaWriter.write(messageString);
    kafkaWriter.commit();
  }
  finally {
    kafkaWriter.close();
  }
  Assert.assertEquals(kafkaWriter.recordsWritten(),1);
  byte[] message=_kafkaTestHelper.getIteratorForTopic(topic).next().message();
  String messageReceived=new String(message);
  Assert.assertEquals(messageReceived,messageString);
}
