{
  Converter<SI,SO,DI,DO> converter=super.init(workUnit);
  this.instrumentationEnabled=GobblinMetrics.isEnabled(workUnit);
  if (isInstrumentationEnabled()) {
    this.metricContext=closer.register(Instrumented.getMetricContext(workUnit,classTag));
    this.recordsInMeter=Optional.of(this.metricContext.meter(MetricNames.ConverterMetrics.RECORDS_IN_METER));
    this.recordsOutMeter=Optional.of(this.metricContext.meter(MetricNames.ConverterMetrics.RECORDS_OUT_METER));
    this.recordsExceptionMeter=Optional.of(this.metricContext.meter(MetricNames.ConverterMetrics.RECORDS_FAILED_METER));
    this.converterTimer=Optional.of(this.metricContext.timer(MetricNames.ConverterMetrics.CONVERT_TIMER));
  }
  return converter;
}
