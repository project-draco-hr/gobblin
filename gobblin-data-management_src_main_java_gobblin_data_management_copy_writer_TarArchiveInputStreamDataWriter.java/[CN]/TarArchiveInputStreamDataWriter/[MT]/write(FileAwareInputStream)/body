{
  closer.register(fileAwareInputStream.getInputStream());
  filesWritten++;
  TarArchiveInputStream tarIn=new TarArchiveInputStream(fileAwareInputStream.getInputStream());
  TarArchiveEntry tarEntry;
  Path fileDestinationPath=fileAwareInputStream.getFile().getDestination();
  String tarEntryRootName=null;
  try {
    while ((tarEntry=tarIn.getNextTarEntry()) != null) {
      if (tarEntryRootName == null) {
        tarEntryRootName=StringUtils.remove(tarEntry.getName(),Path.SEPARATOR);
      }
      String newTarEntryPath=tarEntry.getName().replace(tarEntryRootName,fileDestinationPath.getName());
      Path tarEntryDestinationPath=PathUtils.withoutLeadingSeparator(new Path(fileDestinationPath.getParent(),newTarEntryPath));
      Path tarEntryStagingPath=new Path(this.stagingDir,tarEntryDestinationPath);
      log.info("Unarchiving at " + tarEntryStagingPath);
      if (tarEntry.isDirectory() && !fs.exists(tarEntryStagingPath)) {
        fs.mkdirs(tarEntryStagingPath);
      }
 else       if (!tarEntry.isDirectory()) {
        FSDataOutputStream out=fs.create(tarEntryStagingPath,true);
        try {
          IOUtils.copyBytes(tarIn,out,fs.getConf(),false);
        }
  finally {
          out.close();
        }
      }
    }
  }
  finally {
    tarIn.close();
    fileAwareInputStream.getInputStream().close();
  }
  this.setFilePermissions(fileAwareInputStream.getFile());
}
