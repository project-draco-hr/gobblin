{
  LOG.info("Creating compaction jobs for dataset " + dataset + " with priority "+ dataset.priority()+ " and late data threshold for recompact "+ dataset.lateDataThresholdForRecompact());
  final MRCompactorJobPropCreator jobPropCreator=getJobPropCreator(dataset);
  List<Dataset> datasetsWithProps;
  try {
    datasetsWithProps=jobPropCreator.createJobProps();
  }
 catch (  Throwable t) {
    datasetsWithProps=ImmutableList.<Dataset>of(jobPropCreator.createFailedJobProps(t));
  }
  return datasetsWithProps;
}
