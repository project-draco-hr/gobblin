{
  long lowWatermarkValue=0;
  long expectedHighWatermarkValue=100;
  TestWatermark lowWatermark=new TestWatermark();
  lowWatermark.setLongWatermark(lowWatermarkValue);
  TestWatermark expectedHighWatermark=new TestWatermark();
  expectedHighWatermark.setLongWatermark(expectedHighWatermarkValue);
  WatermarkInterval watermarkInterval=new WatermarkInterval(lowWatermark,expectedHighWatermark);
  WorkUnit workUnit=new WorkUnit(null,null,watermarkInterval);
  TestWatermark deserializedLowWatermark=(TestWatermark)WatermarkSerializerHelper.convertJsonToWatermark(workUnit.getLowWatermark(),TestWatermark.class);
  TestWatermark deserializedExpectedHighWatermark=(TestWatermark)WatermarkSerializerHelper.convertJsonToWatermark(workUnit.getExpectedHighWatermark(),TestWatermark.class);
  Assert.assertEquals(deserializedLowWatermark.getLongWatermark(),lowWatermarkValue);
  Assert.assertEquals(deserializedExpectedHighWatermark.getLongWatermark(),expectedHighWatermarkValue);
}
