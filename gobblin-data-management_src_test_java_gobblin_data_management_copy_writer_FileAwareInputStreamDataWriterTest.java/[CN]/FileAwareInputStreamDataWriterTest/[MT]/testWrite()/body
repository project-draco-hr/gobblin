{
  String streamString="testContents";
  FileStatus status=fs.getFileStatus(testTempPath);
  OwnerAndPermission ownerAndPermission=new OwnerAndPermission(status.getOwner(),status.getGroup(),new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL));
  CopyableFile cf=CopyableFileUtils.getTestCopyableFile(ownerAndPermission);
  CopyableDatasetMetadata metadata=new CopyableDatasetMetadata(new TestCopyableDataset(new Path("/source")));
  WorkUnitState state=new WorkUnitState();
  state.setProp(ConfigurationKeys.WRITER_STAGING_DIR,new Path(testTempPath,"staging").toString());
  state.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR,new Path(testTempPath,"output").toString());
  state.setProp(ConfigurationKeys.WRITER_FILE_PATH,RandomStringUtils.randomAlphabetic(5));
  CopySource.serializeCopyEntity(state,cf);
  CopySource.serializeCopyableDataset(state,metadata);
  FileAwareInputStreamDataWriter dataWriter=new FileAwareInputStreamDataWriter(state,1,0);
  FileAwareInputStream fileAwareInputStream=new FileAwareInputStream(cf,StreamUtils.convertStream(IOUtils.toInputStream(streamString)));
  dataWriter.write(fileAwareInputStream);
  dataWriter.commit();
  Path writtenFilePath=new Path(new Path(state.getProp(ConfigurationKeys.WRITER_OUTPUT_DIR),cf.getDatasetAndPartition(metadata).identifier()),cf.getDestination());
  Assert.assertEquals(IOUtils.toString(new FileInputStream(writtenFilePath.toString())),streamString);
}
