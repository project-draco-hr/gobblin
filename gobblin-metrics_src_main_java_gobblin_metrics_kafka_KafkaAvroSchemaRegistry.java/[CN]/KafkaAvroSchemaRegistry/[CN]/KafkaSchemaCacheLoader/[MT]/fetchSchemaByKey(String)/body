{
  String schemaUrl=KafkaAvroSchemaRegistry.this.url + GET_RESOURCE_BY_ID + key;
  GetMethod get=new GetMethod(schemaUrl);
  int statusCode;
  String schemaString;
  try {
    statusCode=KafkaAvroSchemaRegistry.this.httpClient.executeMethod(get);
    schemaString=get.getResponseBodyAsString();
  }
  finally {
    get.releaseConnection();
  }
  if (statusCode != HttpStatus.SC_OK) {
    throw new SchemaRegistryException(String.format("Schema with key %s cannot be retrieved, statusCode = %d",key,statusCode));
  }
  Schema schema;
  if (schemaString.startsWith("{")) {
    try {
      schema=new Schema.Parser().parse(schemaString);
    }
 catch (    Exception e) {
      throw new SchemaRegistryException(String.format("Schema with ID = %s cannot be parsed",key),e);
    }
  }
 else {
    throw new SchemaRegistryException(String.format("Schema with key %s cannot be parsed: schema should start with '{'",key));
  }
  return schema;
}
