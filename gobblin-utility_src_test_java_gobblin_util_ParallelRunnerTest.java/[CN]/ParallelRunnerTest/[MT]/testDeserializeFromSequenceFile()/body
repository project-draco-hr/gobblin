{
  Queue<WorkUnitState> workUnitStates=Queues.newConcurrentLinkedQueue();
  Path seqPath1=new Path(this.outputPath,"seq1");
  Path seqPath2=new Path(this.outputPath,"seq2");
  try (ParallelRunner parallelRunner=new ParallelRunner(2,this.fs)){
    parallelRunner.deserializeFromSequenceFile(Text.class,WorkUnitState.class,seqPath1,workUnitStates,true);
    parallelRunner.deserializeFromSequenceFile(Text.class,WorkUnitState.class,seqPath2,workUnitStates,true);
  }
   Assert.assertFalse(this.fs.exists(seqPath1));
  Assert.assertFalse(this.fs.exists(seqPath2));
  Assert.assertEquals(workUnitStates.size(),2);
  for (  WorkUnitState workUnitState : workUnitStates) {
    TestWatermark watermark=new Gson().fromJson(workUnitState.getActualHighWatermark(),TestWatermark.class);
    Assert.assertTrue(watermark.getLongWatermark() == 10L || watermark.getLongWatermark() == 100L);
  }
}
