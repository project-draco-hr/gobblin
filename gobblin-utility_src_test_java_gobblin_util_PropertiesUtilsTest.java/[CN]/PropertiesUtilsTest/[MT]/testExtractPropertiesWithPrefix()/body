{
  Properties properties=new Properties();
  properties.setProperty("k1.kk1","v1");
  properties.setProperty("k1.kk2","v2");
  properties.setProperty("k2.kk","v3");
  Properties extractedPropertiesK1=PropertiesUtils.extractPropertiesWithPrefix(properties,Optional.of("k1"));
  Assert.assertEquals(extractedPropertiesK1.getProperty("k1.kk1"),"v1");
  Assert.assertEquals(extractedPropertiesK1.getProperty("k1.kk2"),"v2");
  Assert.assertTrue(!extractedPropertiesK1.containsKey("k2.kk"));
  Properties extractedPropertiesK2=PropertiesUtils.extractPropertiesWithPrefix(properties,Optional.of("k2"));
  Assert.assertTrue(!extractedPropertiesK2.containsKey("k1.kk1"));
  Assert.assertTrue(!extractedPropertiesK2.containsKey("k1.kk2"));
  Assert.assertEquals(extractedPropertiesK2.getProperty("k2.kk"),"v3");
  Properties extractedPropertiesK3=PropertiesUtils.extractPropertiesWithPrefix(properties,Optional.of("k3"));
  Assert.assertTrue(!extractedPropertiesK3.containsKey("k1.kk1"));
  Assert.assertTrue(!extractedPropertiesK3.containsKey("k1.kk1"));
  Assert.assertTrue(!extractedPropertiesK3.containsKey("k2.kk"));
}
