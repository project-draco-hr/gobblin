{
  List<JobState.DatasetState> datasetStateList=this.datasetStateStore.getAll(JOB_NAME,"current.jst");
  Assert.assertEquals(datasetStateList.size(),1);
  JobState jobState=datasetStateList.get(0);
  Assert.assertEquals(jobState.getState(),JobState.RunningState.COMMITTED);
  Assert.assertEquals(jobState.getTaskStates().size(),DummySource.NUM_WORK_UNITS);
  for (  TaskState taskState : jobState.getTaskStates()) {
    Assert.assertEquals(taskState.getWorkingState(),WorkUnitState.WorkingState.COMMITTED);
    Assert.assertEquals(taskState.getProp(FOO),BAR);
    int expectedLowWatermark=(run - 1) * DummySource.NUM_WORK_UNITS * DummySource.NUM_RECORDS_TO_EXTRACT_PER_EXTRACTOR + taskState.getPropAsInt(WORK_UNIT_INDEX_KEY) * DummySource.NUM_RECORDS_TO_EXTRACT_PER_EXTRACTOR + 1;
    Assert.assertEquals(taskState.getPropAsInt(ConfigurationKeys.WORK_UNIT_LOW_WATER_MARK_KEY),expectedLowWatermark);
    int expectedHighWatermark=expectedLowWatermark + DummySource.NUM_RECORDS_TO_EXTRACT_PER_EXTRACTOR - 1;
    Assert.assertEquals(taskState.getPropAsInt(ConfigurationKeys.WORK_UNIT_HIGH_WATER_MARK_KEY),expectedHighWatermark);
    Assert.assertEquals(taskState.getPropAsInt(LAST_READ_RECORD_KEY),expectedHighWatermark);
  }
}
