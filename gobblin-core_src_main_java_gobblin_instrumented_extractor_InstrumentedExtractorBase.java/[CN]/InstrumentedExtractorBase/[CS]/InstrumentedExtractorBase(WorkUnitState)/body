{
  super();
  closer=Closer.create();
  this.metricContext=closer.register(Instrumented.getMetricContext(workUnitState,this.getClass()));
  this.readRecordsMeter=this.metricContext.contextAwareMeter(MetricNames.Extractor.RECORDS_READ);
  this.dataRecordExceptionsMeter=this.metricContext.contextAwareMeter(MetricNames.Extractor.RECORDS_FAILED);
  this.extractorTimer=this.metricContext.contextAwareTimer(MetricNames.Extractor.EXTRACT_TIME);
}
