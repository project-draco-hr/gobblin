{
  if (input == null) {
    return true;
  }
  try {
    if (PathUtils.isGlob(input.getDataLocation())) {
      log.error(String.format("%s cannot be applied to globbed location %s. Will not skip.",this.getClass().getSimpleName(),input.getDataLocation()));
      return false;
    }
    Path targetPath=this.helper.getTargetFileSystem().makeQualified(this.helper.getTargetPath(input.getDataLocation(),this.helper.getTargetFs(),Optional.of(input),false));
    Optional<FileStatus> targetFileStatus=this.helper.getConfiguration().getCopyContext().getFileStatus(this.helper.getTargetFs(),targetPath);
    if (!targetFileStatus.isPresent()) {
      return false;
    }
    Optional<FileStatus> sourceFileStatus=this.helper.getConfiguration().getCopyContext().getFileStatus(this.helper.getDataset().getFs(),input.getDataLocation());
    if (!sourceFileStatus.isPresent()) {
      throw new RuntimeException(String.format("Source path %s does not exist!",input.getDataLocation()));
    }
    return targetFileStatus.get().getModificationTime() > sourceFileStatus.get().getModificationTime();
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
}
