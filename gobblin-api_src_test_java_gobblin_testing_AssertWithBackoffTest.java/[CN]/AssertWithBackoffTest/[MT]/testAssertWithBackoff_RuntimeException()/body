{
  Logger log=LoggerFactory.getLogger("testAssertWithBackoff_RuntimeException");
  setLogjLevelForLogger(log,Level.ERROR);
  try {
    AssertWithBackoff.create().logger(log).timeoutMs(50).assertTrue(new Predicate<Void>(){
      @Override public boolean apply(      Void input){
        throw new RuntimeException("BLAH");
      }
    }
,"should throw RuntimeException");
    Assert.fail("should throw RuntimeException");
  }
 catch (  RuntimeException e) {
    Assert.assertTrue(e.getMessage().indexOf("BLAH") > 0,e.getMessage());
  }
}
