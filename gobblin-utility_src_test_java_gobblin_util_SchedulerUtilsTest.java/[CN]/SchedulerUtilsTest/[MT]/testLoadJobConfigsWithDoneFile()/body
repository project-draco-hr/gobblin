{
  File subDir2=new File(JOB_CONF_ROOT_DIR,"test2");
  Files.copy(new File(subDir2,"test21.pull"),new File(subDir2,"test21.pull.done"));
  Properties properties=new Properties();
  properties.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_DIR_KEY,JOB_CONF_ROOT_DIR);
  List<Properties> jobConfigs=SchedulerUtils.loadJobConfigs(properties);
  Assert.assertEquals(jobConfigs.size(),3);
  Properties jobProps1=jobConfigs.get(0);
  Assert.assertEquals(jobProps1.stringPropertyNames().size(),6);
  Assert.assertEquals(jobProps1.getProperty("k1"),"d1");
  Assert.assertEquals(jobProps1.getProperty("k2"),"a2");
  Assert.assertEquals(jobProps1.getProperty("k3"),"a3");
  Assert.assertEquals(jobProps1.getProperty("k8"),"a8");
  Properties jobProps2=jobConfigs.get(1);
  Assert.assertEquals(jobProps2.stringPropertyNames().size(),6);
  Assert.assertEquals(jobProps2.getProperty("k1"),"c1");
  Assert.assertEquals(jobProps2.getProperty("k2"),"a2");
  Assert.assertEquals(jobProps2.getProperty("k3"),"b3");
  Assert.assertEquals(jobProps2.getProperty("k6"),"a6");
  Properties jobProps3=jobConfigs.get(2);
  Assert.assertEquals(jobProps3.stringPropertyNames().size(),6);
  Assert.assertEquals(jobProps3.getProperty("k1"),"b1");
  Assert.assertEquals(jobProps3.getProperty("k2"),"a2");
  Assert.assertEquals(jobProps3.getProperty("k3"),"a3");
  Assert.assertEquals(jobProps3.getProperty("k7"),"a7");
}
