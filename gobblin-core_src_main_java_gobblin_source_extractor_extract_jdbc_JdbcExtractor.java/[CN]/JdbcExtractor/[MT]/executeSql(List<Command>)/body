{
  String query=null;
  int fetchSize=0;
  for (  Command cmd : cmds) {
    if (cmd instanceof JdbcCommand) {
      JdbcCommandType type=(JdbcCommandType)cmd.getCommandType();
switch (type) {
case QUERY:
        query=cmd.getParams().get(0);
      break;
case FETCHSIZE:
    fetchSize=Integer.parseInt(cmd.getParams().get(0));
  break;
default :
log.error("Command " + type.toString() + " not recognized");
break;
}
}
}
this.log.info("Executing query:" + query);
ResultSet resultSet=null;
Connection connection=null;
try {
this.jdbcSource=createJdbcSource();
connection=this.jdbcSource.getConnection();
Statement statement=connection.createStatement();
if (fetchSize != 0 && this.getExpectedRecordCount() > 2000) {
statement.setFetchSize(fetchSize);
}
final boolean status=statement.execute(query);
if (status == false) {
log.error("Failed to execute sql:" + query);
}
resultSet=statement.getResultSet();
}
 catch (Exception e) {
log.error("Failed to execute sql:" + query + " ;error-"+ e.getMessage(),e);
}
 finally {
if (connection != null) {
connection.close();
}
}
CommandOutput<JdbcCommand,ResultSet> output=new JdbcCommandOutput();
output.put((JdbcCommand)cmds.get(0),resultSet);
return output;
}
