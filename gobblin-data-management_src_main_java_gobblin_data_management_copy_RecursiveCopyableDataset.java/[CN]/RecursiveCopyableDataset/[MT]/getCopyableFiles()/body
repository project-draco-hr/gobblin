{
  List<FileStatus> files=FileListUtils.listFilesRecursively(this.fs,this.rootPath,this.pathFilter);
  List<CopyableFile> copyableFiles=Lists.newArrayList();
  for (  FileStatus file : files) {
    Path relativeOutputPath=getRelativeOuptutPath(file);
    Path outputPath=new Path(this.targetDirectory,relativeOutputPath);
    OwnerAndPermission ownerAndPermission=new OwnerAndPermission(file.getOwner(),file.getGroup(),file.getPermission());
    List<OwnerAndPermission> ancestorOwnerAndPermissions=Lists.newArrayList();
    try {
      Path currentPath=PathUtils.getPathWithoutSchemeAndAuthority(file.getPath());
      while (currentPath != null && currentPath.getParent() != null && !currentPath.getParent().equals(this.rootPath)) {
        currentPath=currentPath.getParent();
        ancestorOwnerAndPermissions.add(this.ownerAndPermissionCache.get(currentPath));
      }
    }
 catch (    ExecutionException ee) {
    }
    FileChecksum checksum=this.fs.getFileChecksum(file.getPath());
    copyableFiles.add(new CopyableFile(file,outputPath,relativeOutputPath,ownerAndPermission,ancestorOwnerAndPermissions,checksum == null ? new byte[0] : checksum.getBytes()));
  }
  return copyableFiles;
}
