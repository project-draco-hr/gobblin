{
  MetricContext context=MetricContext.builder("context").build();
  KafkaEventReporter kafkaReporter=getBuilder(context).build("localhost:" + kafkaPort,topic);
  String namespace="gobblin.metrics.test";
  String eventName="testEvent";
  GobblinTrackingEvent event=new GobblinTrackingEvent();
  event.setName(eventName);
  event.setNamespace(namespace);
  event.setMetadata(Maps.<String,String>newHashMap());
  context.submitEvent(event);
  try {
    Thread.sleep(100);
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
  kafkaReporter.report();
  try {
    Thread.sleep(100);
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
  GobblinTrackingEvent retrievedEvent=nextEvent(this.iterator);
  Assert.assertEquals(retrievedEvent.getNamespace(),namespace);
  Assert.assertEquals(retrievedEvent.getName(),eventName);
  Assert.assertEquals(retrievedEvent.getMetadata().size(),1);
}
