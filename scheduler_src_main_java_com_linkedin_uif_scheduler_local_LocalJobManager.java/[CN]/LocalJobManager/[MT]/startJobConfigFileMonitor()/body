{
  File jobConfigFileDir=new File(this.properties.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_DIR_KEY));
  long pollingInterval=Long.parseLong(this.properties.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_MONITOR_POLLING_INTERVAL_KEY,ConfigurationKeys.DEFAULT_JOB_CONFIG_FILE_MONITOR_POLLING_INTERVAL));
  FileAlterationObserver observer=new FileAlterationObserver(jobConfigFileDir);
  FileAlterationMonitor monitor=new FileAlterationMonitor(pollingInterval);
  FileAlterationListener listener=new FileAlterationListenerAdaptor(){
    /** 
 * Called when a new job configuration file is dropped in.
 */
    @Override public void onFileCreate(    File file){
      if (!file.getName().endsWith(JOB_CONFIG_FILE_EXTENSION)) {
        return;
      }
      LOG.info("Detected new job configuration file " + file.getAbsolutePath());
      Properties jobProps=new Properties();
      try {
        jobProps.load(new FileReader(file));
        jobProps.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,file.getAbsolutePath());
      }
 catch (      Exception e) {
        LOG.error("Failed to load job configuration from file " + file.getAbsolutePath());
        return;
      }
      boolean runOnce=Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY,"false"));
      try {
        if (runOnce) {
          scheduleJob(jobProps,new RunOnceJobListener());
        }
 else {
          scheduleJob(jobProps,null);
        }
      }
 catch (      JobException je) {
        LOG.error("Failed to schedule new job loaded from job configuration file " + file.getAbsolutePath(),je);
      }
    }
  }
;
  observer.addListener(listener);
  monitor.addObserver(observer);
  monitor.start();
}
