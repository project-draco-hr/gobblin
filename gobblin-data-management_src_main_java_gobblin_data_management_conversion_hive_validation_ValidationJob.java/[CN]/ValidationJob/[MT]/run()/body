{
  try {
    this.successfulConversions=Maps.newHashMap();
    this.failedConversions=Maps.newHashMap();
    Iterator<HiveDataset> iterator=this.datasetFinder.getDatasetsIterator();
    EventSubmitter.submit(Optional.of(this.eventSubmitter),EventConstants.VALIDATION_FIND_HIVE_TABLES_EVENT);
    while (iterator.hasNext()) {
      ConvertibleHiveDataset hiveDataset=(ConvertibleHiveDataset)iterator.next();
      try (AutoReturnableObject<IMetaStoreClient> client=hiveDataset.getClientPool().getClient()){
        log.info(String.format("Validating dataset: %s",hiveDataset));
        if (HiveUtils.isPartitioned(hiveDataset.getTable())) {
          processPartitionedTable(hiveDataset,client);
        }
 else {
          processNonPartitionedTable(hiveDataset);
        }
      }
     }
    for (    Map.Entry<String,String> successfulConversion : this.successfulConversions.entrySet()) {
      log.info(String.format("Successful conversion: %s [%s]",successfulConversion.getKey(),successfulConversion.getValue()));
    }
    for (    Map.Entry<String,String> failedConverion : this.failedConversions.entrySet()) {
      log.warn(String.format("Failed conversion: %s [%s]",failedConverion.getKey(),failedConverion.getValue()));
    }
    if (failedConversions.size() > 0) {
      throw new RuntimeException("Atleast one conversion failed. Please review report above");
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
