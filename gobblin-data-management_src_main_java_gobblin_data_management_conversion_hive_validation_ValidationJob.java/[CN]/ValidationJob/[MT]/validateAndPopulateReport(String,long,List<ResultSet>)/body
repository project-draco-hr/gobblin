{
  if (null == resultSets || resultSets.size() == 0) {
    this.successfulConversions.put(String.format("Dataset: %s Instance: %s",datasetIdentifier,conversionInstance),"No conversion details found");
    new SlaEventSubmitter(this.eventSubmitter,EventConstants.VALIDATION_NOOP_SLA_EVENT,props).submit();
    return;
  }
  try {
    long rowCountCached=-1;
    boolean isFirst=true;
    for (    ResultSet resultSet : resultSets) {
      if (resultSet.next()) {
        long rowCount=resultSet.getLong(1);
        if (isFirst) {
          rowCountCached=rowCount;
          isFirst=false;
          continue;
        }
        if (rowCount != rowCountCached) {
          this.failedConversions.put(String.format("Dataset: %s Instance: %s",datasetIdentifier,conversionInstance),"Row counts did not match across all conversions");
          new SlaEventSubmitter(this.eventSubmitter,EventConstants.VALIDATION_FAILED_SLA_EVENT,props).submit();
          return;
        }
      }
    }
    this.successfulConversions.put(String.format("Dataset: %s Instance: %s",datasetIdentifier,conversionInstance),"Row counts matched across all conversions");
    new SlaEventSubmitter(this.eventSubmitter,EventConstants.VALIDATION_SUCCESSFUL_SLA_EVENT,props).submit();
  }
 catch (  SQLException e) {
    throw new RuntimeException(e);
  }
}
