{
  Preconditions.checkNotNull(originalSchema);
  Preconditions.checkNotNull(flattenedSchema);
  Preconditions.checkArgument(StringUtils.isNotBlank(originalTblName));
  Preconditions.checkArgument(StringUtils.isNotBlank(flattenedTblName));
  String originalDbName=optionalOriginalDbName.isPresent() ? optionalFlattenedDbName.get() : DEFAULT_DB_NAME;
  String flattenedDbName=optionalFlattenedDbName.isPresent() ? optionalFlattenedDbName.get() : DEFAULT_DB_NAME;
  boolean shouldOverwriteTable=optionalOverwriteTable.isPresent() ? optionalOverwriteTable.get() : true;
  boolean shouldCreateIfNotExists=optionalCreateIfNotExists.isPresent() ? optionalCreateIfNotExists.get() : false;
  log.debug("Original Schema: " + originalSchema.toString());
  log.debug("Flattened Schema: " + flattenedSchema.toString());
  StringBuilder dmlQuery=new StringBuilder();
  if (shouldOverwriteTable) {
    dmlQuery.append(String.format("INSERT OVERWRITE TABLE `%s.%s` \n",flattenedDbName,flattenedTblName));
  }
 else {
    dmlQuery.append(String.format("INSERT INTO TABLE `%s.%s` \n",flattenedDbName,flattenedTblName));
  }
  if (optionalPartitionDMLInfo.isPresent()) {
    if (optionalPartitionDMLInfo.get().size() > 0) {
      dmlQuery.append("PARTITION (");
      for (      Map.Entry<String,String> partition : optionalPartitionDMLInfo.get().entrySet()) {
        dmlQuery.append(String.format("`%s`='%s'",partition.getKey(),partition.getValue()));
      }
      dmlQuery.append(") \n");
    }
  }
  if (shouldCreateIfNotExists) {
    dmlQuery.append(" IF NOT EXISTS \n");
  }
  dmlQuery.append("SELECT \n");
  boolean isFirst=true;
  List<Schema.Field> fieldList=flattenedSchema.getFields();
  for (  Schema.Field field : fieldList) {
    String flattenSource=field.getProp("flatten_source");
    String colName;
    if (StringUtils.isNotBlank(flattenSource)) {
      colName=flattenSource;
    }
 else {
      colName=field.name();
    }
    if (isFirst) {
      isFirst=false;
    }
 else {
      dmlQuery.append(", \n");
    }
    dmlQuery.append(String.format("  %s",colName));
  }
  dmlQuery.append(String.format(" \nFROM `%s.%s` ",originalDbName,originalTblName));
  if (optionalPartitionDMLInfo.isPresent()) {
    if (optionalPartitionDMLInfo.get().size() > 0) {
      dmlQuery.append("WHERE ");
      for (      Map.Entry<String,String> partition : optionalPartitionDMLInfo.get().entrySet()) {
        dmlQuery.append(String.format("%s='%s'",partition.getKey(),partition.getValue()));
      }
      dmlQuery.append(" \n");
    }
  }
  return dmlQuery.toString();
}
