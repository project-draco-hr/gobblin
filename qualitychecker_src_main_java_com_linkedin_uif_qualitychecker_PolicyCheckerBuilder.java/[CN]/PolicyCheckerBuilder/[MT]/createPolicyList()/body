{
  PolicyList list=new PolicyList();
  Splitter splitter=Splitter.on(",").omitEmptyStrings().trimResults();
  List<String> policies=Lists.newArrayList(splitter.split(this.state.getProp(ConfigurationKeys.QUALITY_CHECKER_PREFIX + ConfigurationKeys.POLICY_LIST)));
  List<String> types=Lists.newArrayList(splitter.split(this.state.getProp(ConfigurationKeys.QUALITY_CHECKER_PREFIX + ConfigurationKeys.POLICY_LIST_TYPE)));
  if (policies.size() != types.size())   throw new Exception("Policies list and Policies list type are not the same length");
  for (int i=0; i < policies.size(); i++) {
    try {
      Class<? extends Policy> policyClass=(Class<? extends Policy>)Class.forName(policies.get(i));
      Constructor<? extends Policy> policyConstructor=policyClass.getConstructor(State.class,MetaStoreClient.class,Policy.Type.class);
      Policy policy=policyConstructor.newInstance(this.state,this.metadata,Policy.Type.valueOf(types.get(i)));
      list.getPolicyList().add((Policy)policy);
    }
 catch (    Exception e) {
      LOG.error(ConfigurationKeys.QUALITY_CHECKER_PREFIX + ConfigurationKeys.POLICY_LIST + " contains a class "+ policies.get(i)+ " which doesn't extend Policy.",e);
      throw e;
    }
  }
  return list;
}
