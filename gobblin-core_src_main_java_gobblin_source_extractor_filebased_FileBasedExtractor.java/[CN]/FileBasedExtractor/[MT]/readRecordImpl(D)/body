{
  this.totalRecordCount++;
  if (this.statusCount > 0 && this.totalRecordCount % this.statusCount == 0) {
    LOGGER.info("Total number of records processed so far: " + this.totalRecordCount);
  }
  if (!readRecordStart) {
    LOGGER.info("Starting to read records");
    if (!filesToPull.isEmpty()) {
      currentFile=filesToPull.remove(0);
      currentFileItr=downloadFile(currentFile);
      LOGGER.info("Will start downloading file: " + currentFile);
    }
 else {
      LOGGER.info("Finished reading records from all files");
      return null;
    }
    readRecordStart=true;
  }
  while ((currentFileItr == null || !currentFileItr.hasNext()) && !filesToPull.isEmpty()) {
    LOGGER.info("Finished downloading file: " + currentFile);
    closeCurrentFile();
    incrementBytesReadCounter();
    currentFile=filesToPull.remove(0);
    currentFileItr=downloadFile(currentFile);
    LOGGER.info("Will start downloading file: " + currentFile);
  }
  if (currentFileItr != null && currentFileItr.hasNext()) {
    return currentFileItr.next();
  }
 else {
    LOGGER.info("Finished reading records from all files");
    return null;
  }
}
