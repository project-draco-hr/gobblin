{
  avroFileSource.shutdown(state);
  if (!createdStagingTables.isEmpty()) {
    Set<String> tablesToDrop=Sets.newHashSet(createdStagingTables);
    Throwable t=null;
    try (Connection conn=createConnection(state)){
      LOG.info("Dropping staging table(s) " + createdStagingTables);
      Iterator<String> it=tablesToDrop.iterator();
      while (it.hasNext()) {
        String createdStagingTable=it.next();
        try {
          dropTable(conn,createdStagingTable);
          it.remove();
        }
 catch (        Exception e) {
          LOG.error("Failed to drop staging table " + createdStagingTable);
          t=e;
        }
      }
    }
 catch (    SQLException e) {
      throw new RuntimeException("Failed to dropping table(s) " + tablesToDrop,e);
    }
    if (t != null) {
      throw new RuntimeException("Failed to dropping table(s) " + tablesToDrop,t);
    }
  }
  if (!passedStagingTables.isEmpty()) {
    Set<String> tablesToTruncate=Sets.newHashSet(passedStagingTables);
    LOG.info("Truncating staging table(s) " + passedStagingTables);
    Throwable t=null;
    try (Connection conn=createConnection(state)){
      Iterator<String> it=tablesToTruncate.iterator();
      while (it.hasNext()) {
        String passedStagingTable=it.next();
        try {
          truncate(conn,passedStagingTable);
          it.remove();
        }
 catch (        Exception e) {
          LOG.error("Failed to truncate staging table " + passedStagingTable);
          t=e;
        }
      }
    }
 catch (    SQLException e) {
      throw new RuntimeException("Failed to truncating table(s) " + tablesToTruncate,e);
    }
    if (t != null) {
      throw new RuntimeException("Failed to truncating table(s) " + tablesToTruncate,t);
    }
  }
}
