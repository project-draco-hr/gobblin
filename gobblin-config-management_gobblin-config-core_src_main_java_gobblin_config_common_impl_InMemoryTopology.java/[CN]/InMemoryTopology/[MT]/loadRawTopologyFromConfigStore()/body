{
  Collection<ConfigKeyPath> nodeQueue=this.getChildren(SingleLinkedListConfigKeyPath.ROOT);
  while (!nodeQueue.isEmpty()) {
    ConfigKeyPath configKeyPath=nodeQueue.iterator().next();
    nodeQueue.remove(configKeyPath);
    List<ConfigKeyPath> ownImports=this.getOwnImports(configKeyPath);
    for (    ConfigKeyPath p : ownImports) {
      this.ownImportedByMap.put(p,configKeyPath);
    }
    List<ConfigKeyPath> recursiveImports=null;
    if (this.recursiveImportMap.containsKey(configKeyPath)) {
      recursiveImports=this.recursiveImportMap.get(configKeyPath);
    }
 else {
      recursiveImports=SimpleImportChainResolver.getImportsRecursively(this.fallback.getConfigStore(),this.fallback.getVersion(),configKeyPath);
      this.recursiveImportMap.putAll(configKeyPath,recursiveImports);
    }
    if (recursiveImports != null) {
      for (      ConfigKeyPath p : recursiveImports) {
        this.recursiveImportedByMap.put(p,configKeyPath);
      }
    }
    Collection<ConfigKeyPath> tmp=this.getChildren(configKeyPath);
    nodeQueue.addAll(tmp);
  }
}
