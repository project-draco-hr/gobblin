{
  try {
    this.beginGetWorkunitsTime=System.currentTimeMillis();
    initialize(state);
    EventSubmitter.submit(Optional.of(this.eventSubmitter),EventConstants.CONVERSION_FIND_HIVE_TABLES_EVENT);
    Iterator<HiveDataset> iterator=this.datasetFinder.getDatasetsIterator();
    while (iterator.hasNext()) {
      HiveDataset hiveDataset=iterator.next();
      try (AutoReturnableObject<IMetaStoreClient> client=hiveDataset.getClientPool().getClient()){
        log.debug(String.format("Processing dataset: %s",hiveDataset));
        if (HiveUtils.isPartitioned(hiveDataset.getTable())) {
          createWorkunitsForPartitionedTable(hiveDataset,client);
        }
 else {
          createWorkunitForNonPartitionedTable(hiveDataset);
        }
      }
     }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  int realWorkunits=this.workunits.size();
  this.watermarker.onGetWorkunitsEnd(this.workunits);
  log.info(String.format("Created %s real workunits and %s watermark workunits",realWorkunits,(this.workunits.size() - realWorkunits)));
  return this.workunits;
}
