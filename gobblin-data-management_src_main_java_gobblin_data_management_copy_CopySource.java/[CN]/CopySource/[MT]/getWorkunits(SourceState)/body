{
  List<WorkUnit> workUnits=Lists.newArrayList();
  CopyContext copyContext=new CopyContext();
  try {
    DatasetFinder<CopyableDataset> datasetFinder=DatasetUtils.instantiateDatasetFinder(state.getProperties(),getSourceFileSystem(state),DEFAULT_DATASET_PROFILE_CLASS_KEY);
    List<CopyableDataset> copyableDatasets=datasetFinder.findDatasets();
    FileSystem targetFs=getTargetFileSystem(state);
    for (    CopyableDataset copyableDataset : copyableDatasets) {
      Path targetRoot=getTargetRoot(state,datasetFinder,copyableDataset);
      CopyConfiguration copyConfiguration=new CopyConfiguration(targetRoot,PreserveAttributes.fromMnemonicString(state.getProp(PRESERVE_ATTRIBUTES_KEY)),copyContext);
      Collection<CopyableFile> files=copyableDataset.getCopyableFiles(targetFs,copyConfiguration);
      Collection<Partition<CopyableFile>> partitions=partitionCopyableFiles(files);
      for (      Partition<CopyableFile> partition : partitions) {
        Extract extract=new Extract(Extract.TableType.SNAPSHOT_ONLY,COPY_PREFIX,partition.getName());
        for (        CopyableFile copyableFile : partition.getFiles()) {
          WorkUnit workUnit=new WorkUnit(extract);
          workUnit.addAll(state);
          serializeCopyableFile(workUnit,copyableFile);
          serializeCopyableDataset(workUnit,new CopyableDatasetMetadata(copyableDataset,targetRoot));
          GobblinMetrics.addCustomTagToState(workUnit,new Tag<>(CopyEventSubmitterHelper.DATASET_ROOT_METADATA_NAME,copyableDataset.datasetRoot().toString()));
          workUnit.setProp(SlaEventKeys.DATASET_URN_KEY,copyableDataset.datasetRoot().toString());
          workUnit.setProp(SlaEventKeys.PARTITION_KEY,copyableFile.getFileSet());
          workUnit.setProp(SlaEventKeys.ORIGIN_TS_IN_MILLI_SECS_KEY,copyableFile.getFileStatus().getModificationTime());
          computeAndSetWorkUnitGuid(workUnit);
          workUnits.add(workUnit);
        }
      }
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  log.info(String.format("Created %s workunits",workUnits.size()));
  return workUnits;
}
