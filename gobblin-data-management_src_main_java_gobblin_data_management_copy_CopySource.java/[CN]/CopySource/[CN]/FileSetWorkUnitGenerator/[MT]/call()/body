{
  try {
    String extractId=fileSet.getName().replace(':','_');
    Extract extract=new Extract(Extract.TableType.SNAPSHOT_ONLY,CopyConfiguration.COPY_PREFIX,extractId);
    List<WorkUnit> workUnitsForPartition=Lists.newArrayList();
    for (    CopyEntity copyEntity : fileSet.getFiles()) {
      CopyableDatasetMetadata metadata=new CopyableDatasetMetadata(this.copyableDataset);
      CopyEntity.DatasetAndPartition datasetAndPartition=copyEntity.getDatasetAndPartition(metadata);
      WorkUnit workUnit=new WorkUnit(extract);
      workUnit.addAll(this.state);
      serializeCopyEntity(workUnit,copyEntity);
      serializeCopyableDataset(workUnit,metadata);
      GobblinMetrics.addCustomTagToState(workUnit,new Tag<>(CopyEventSubmitterHelper.DATASET_ROOT_METADATA_NAME,this.copyableDataset.datasetURN()));
      workUnit.setProp(ConfigurationKeys.DATASET_URN_KEY,datasetAndPartition.toString());
      workUnit.setProp(SlaEventKeys.DATASET_URN_KEY,this.copyableDataset.datasetURN());
      workUnit.setProp(SlaEventKeys.PARTITION_KEY,copyEntity.getFileSet());
      setWorkUnitWeight(workUnit,copyEntity,minWorkUnitWeight);
      setWorkUnitWatermark(workUnit,watermarkGenerator,copyEntity);
      computeAndSetWorkUnitGuid(workUnit);
      workUnitsForPartition.add(workUnit);
    }
    this.workUnitList.putAll(this.fileSet,workUnitsForPartition);
    return null;
  }
 catch (  IOException ioe) {
    throw new RuntimeException("Failed to generate work units for dataset " + this.copyableDataset.datasetURN(),ioe);
  }
}
