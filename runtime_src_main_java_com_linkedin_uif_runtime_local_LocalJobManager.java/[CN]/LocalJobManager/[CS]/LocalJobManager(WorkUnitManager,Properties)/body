{
  this.workUnitManager=workUnitManager;
  this.properties=properties;
  this.scheduler=new StdSchedulerFactory().getScheduler();
  this.jobConfigFileExtensions=Sets.newHashSet(Splitter.on(",").omitEmptyStrings().split(this.properties.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_EXTENSIONS_KEY,ConfigurationKeys.DEFAULT_JOB_CONFIG_FILE_EXTENSIONS)));
  this.jobStateStore=new FsStateStore(properties.getProperty(ConfigurationKeys.STATE_STORE_FS_URI_KEY),properties.getProperty(ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY),JobState.class);
  this.taskStateStore=new FsStateStore(properties.getProperty(ConfigurationKeys.STATE_STORE_FS_URI_KEY),properties.getProperty(ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY),TaskState.class);
  long pollingInterval=Long.parseLong(this.properties.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_MONITOR_POLLING_INTERVAL_KEY,ConfigurationKeys.DEFAULT_JOB_CONFIG_FILE_MONITOR_POLLING_INTERVAL));
  this.fileAlterationMonitor=new FileAlterationMonitor(pollingInterval);
  restoreLastJobIdMap();
  populateSourceWrapperMap();
}
